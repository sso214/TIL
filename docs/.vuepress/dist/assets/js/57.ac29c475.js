(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{415:function(t,s,n){"use strict";n.r(s);var a=n(44),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_13장-스코프"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13장-스코프"}},[t._v("#")]),t._v(" 13장. 스코프")]),t._v(" "),n("h2",{attrs:{id:"_1-스코프란"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-스코프란"}},[t._v("#")]),t._v(" 1. 스코프란?")]),t._v(" "),n("ul",[n("li",[t._v("자바스크립트를 포함한 모든 프로그래밍 언어의 기본적이며 중요한 개념")]),t._v(" "),n("li",[n("strong",[t._v("식별자가 유효한 범위")]),t._v("를 말함")]),t._v(" "),n("li",[t._v("모든 식별자(변수명, 함수명, 클래스명 등)는 자신이 "),n("strong",[t._v("선언된 위치")]),t._v("에 의해 다른 코드가"),n("br"),t._v("\n식별자 자신을 "),n("strong",[t._v("참조할 수 있는 유효 범위")]),t._v("가 결정됨 (=스코프)"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" var1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//코드의 가장 바깥 영역에서 선언")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" var2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//코드 블록 내에서 선언")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" var3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//중첩된 코드 블록 내에서 선언")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" var4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 내에서 선언")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" var5 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//중첩된 함수 내에서 선언")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("스코프는 "),n("strong",[t._v("식별자를 검색할 때 사용하는 규칙")]),n("br"),t._v("\n이름이 같은 식별자들이 있을 경우 자바스크립트 엔진은 어떤 식별자를 참조해야할지 결정해야 함 (=식별자 결정)"),n("br"),t._v("\n자바스크립트 엔진은 코드 실행 시 문맥을 고려하기 때문에 동일한 코드도 코드가 어디서 실행되며"),n("br"),t._v("\n주변에 어떤 코드가 있는지에 따라 다른 결과를 만들어 냄"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//어디서든 참조 가능")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'local'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 내부에서만 참조 가능")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//두 변수는 식별자 이름이 동일하지만 스코프가 다른 별개의 변수")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("스코프는 "),n("strong",[t._v("네임스페이스")]),t._v(" (=이름 공간)"),n("br"),t._v("\n식별자는 값을 구분할 수 있어야 하므로 유일해야 함. 따라 식별자명은 중복되면 안됨."),n("br"),t._v("\n하지만 전체 코드를 통틀어 변수명을 중복시키지 않아아 한다면 변수명을 만드는 것이 무척이나 번거로울 것."),n("br"),t._v("\n프로그래밍 언어에서는 스코프를 통해 식별자인 변수명의 충돌을 방지해 같은 이름의 변수를 사용할 수 있게 함"),n("br"),t._v("\n스코프 내에서 식별자는 유일해야 하지만 다른 스코프에는 같은 이름의 식별자를 사용할 수 있음")])]),t._v(" "),n("blockquote",[n("p",[t._v("렉시컬 환경 = '코드가 어디서 실행되며 주변에 어떤 코드가 있는지'"),n("br"),t._v("\n즉, 코드의 문맥은 렉시컬 환경으로 이루어짐. 이를 구현한 것이 실행 컨텍스트."),n("br"),t._v("\n모든 코드는 실행 컨텍스트에서 평가되고 실행됨. 따라 스코프는 실행 컨텍스트와 깊은 관련이 있음")])]),t._v(" "),n("h4",{attrs:{id:"var-키워드로-선언한-변수의-중복-선언"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#var-키워드로-선언한-변수의-중복-선언"}},[t._v("#")]),t._v(" <var 키워드로 선언한 변수의 중복 선언>")]),t._v(" "),n("p",[t._v("var키워드로 선언한 변수는 같은 스코프 내에 중복 선언이 허용됨."),n("br"),t._v("\n이는 의도치 않게 변수값이 재할당되어 변경되는 부작용을 발생시킴"),n("br"),t._v("\n반면 let, const 키워드로 선언된 변수는 같은 스코프 내에서 중복 선언을 허용하지 않음")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//자바스크립트 엔진에 의해 var 키워드가 없는 것처럼 동작함")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//SyntaxError")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"_2-스코프의-종류"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-스코프의-종류"}},[t._v("#")]),t._v(" 2. 스코프의 종류")]),t._v(" "),n("ul",[n("li",[t._v("스코프는 전역과 지역으로 구분")]),t._v(" "),n("li",[t._v("변수는 자신이 선언된 위치(전역/지역)에 의해 스코프가 결정됨\n"),n("ul",[n("li",[t._v("전역에서 선언된 변수 = 전역 스코프를 갖는 전역 변수")]),t._v(" "),n("li",[t._v("지역에서 선언된 변수 = 지역 스코프를 갖는 지역 변수")])])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("구분")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("설명")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("스코프")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("변수")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("전역")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("코드의 가장 바깥 영역")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("전역 스코프")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("전역 변수")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("지역")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("함수 몸체 내부")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("지역 스코프")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("지역 변수")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global x"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global y"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//outer 지역 스코프 시작")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"outer\'s local z"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"global x"')]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"global y"')]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"outer\'s local z"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//inner 지역 스코프 시작")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inner\'s local x"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 자바스크립트 엔진이 스코프 체인을 통해 참조할 변수를 검색함")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"inner\'s local x"')]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"global y"')]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"outer\'s local z"')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//inner 지역 스코프 끝s")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//outer 지역 스코프 끝")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"global x"')]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-1-전역과-전역-스코프"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-전역과-전역-스코프"}},[t._v("#")]),t._v(" 2-1. 전역과 전역 스코프")]),t._v(" "),n("ul",[n("li",[t._v("전역 : 코드의 가장 바깥 영역")]),t._v(" "),n("li",[t._v("전역은 전역 스코프를 만듬")]),t._v(" "),n("li",[t._v("전역에 변수 선언 시 전역 스코프를 갖는 전역 변수가 됨")]),t._v(" "),n("li",[t._v("전역 변수는 어디서든 참조 가능함")])]),t._v(" "),n("h3",{attrs:{id:"_2-2-지역과-지역-스코프"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-지역과-지역-스코프"}},[t._v("#")]),t._v(" 2-2. 지역과 지역 스코프")]),t._v(" "),n("ul",[n("li",[t._v("지역 : 함수 몸체 내부")]),t._v(" "),n("li",[t._v("지역은 지역 스코프를 만듬")]),t._v(" "),n("li",[t._v("지역에 변수 선언 시 지역 스코프를 갖는 지역 변수가 됨")]),t._v(" "),n("li",[t._v("지역 변수는 자신이 선언된 지역과 하위 지역(중첩 함수)에서만 참조 가능함")])]),t._v(" "),n("h2",{attrs:{id:"_3-스코프-체인"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-스코프-체인"}},[t._v("#")]),t._v(" 3. 스코프 체인")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("함수는 중첩이 가능하며 함수의 지역 스코프도 중첩될 수 있음"),n("br"),t._v("\n(즉, "),n("strong",[t._v("스코프가 함수의 중첩에 의해 계층적 구조를 갖는다")]),t._v("는 것을 의미)")]),t._v(" "),n("p",[t._v("중첩 함수의 지역 스코프는 중첩 함수를 포함하는 외부 함수의 지역 스코프와 계층적 구조를 가짐"),n("br"),t._v("\n이때 외부 함수의 지역 스코프를 중첩 함수의 상위 스코프라고 함"),n("br"),t._v("\n(모든 지역 스코프의 최상위 스코프 = 전역 스코프)")]),t._v(" "),n("p",[t._v("ex."),n("br"),t._v("\ninner 함수 지역 스코프의 상위 스코프 : outer 함수 지역 스코프."),n("br"),t._v("\nouter 함수 지역 스코프의 상위 스코프 : 전역 스코프")])]),t._v(" "),n("li",[n("p",[t._v("모든 스코프는 하나의 계층적 구조로 연결되며,"),n("br"),t._v("\n이렇게 "),n("strong",[t._v("스코프가 계층적으로 연결된 것을 스코프 체인")]),t._v("이라고 함")]),t._v(" "),n("ul",[n("li",[t._v("전역 스코프 "),n("code",[t._v('{x: "global x", y: "global y", outer: <function object>}')])]),t._v(" "),n("li",[t._v("outer 지역 스코프 "),n("code",[t._v('{z: "outer\'s local z", inner: <function object>}')])]),t._v(" "),n("li",[t._v("inner 지역 스코프 "),n("code",[t._v('{x: "inner\'s local x"}')])])])]),t._v(" "),n("li",[n("p",[t._v("변수 참조 시 자바스크립트 엔진은 "),n("strong",[t._v("스코프 체인을 통해")]),n("br"),t._v(" "),n("strong",[t._v("변수를 참조하는 코드의 스코프에서 -> 상위 스코프 방향으로 이동")]),t._v("하며 선언된 변수를 "),n("strong",[t._v("검색")]),t._v("함"),n("br"),t._v("\n(이 때문에 상위 스코프에서 선언한 변수를 하위 스코프에서도 참조 가능한 것)")])]),t._v(" "),n("li",[n("p",[t._v("스코프 체인은 물리적인 실체로 존재함"),n("br"),t._v("\n자바스크립트 엔진은 코드(전역 코드와 함수 코드)를 실행하기에 앞서"),n("br"),t._v("\n스코프 체인 블록 형태와 유사한 자료구조인 렉시컬 환경을 실제로 생성함")]),t._v(" "),n("ol",[n("li",[t._v("변수 선언 실행")]),t._v(" "),n("li",[t._v("변수 식별자가 이 자료구조(렉시컬 환경)에 키로 등록됨")]),t._v(" "),n("li",[t._v("변수 할당 일어나면 이 자료구조의 변수 식별자에 해당하는 값을 변경함")])]),t._v(" "),n("p",[t._v("변수의 검색도 이 자료구조 상에서 이루어짐")])])]),t._v(" "),n("blockquote",[n("p",[t._v("스코프 체인은 실행 컨텍스트의 렉시컬 환경을 단방향으로 연결한 것"),n("br"),t._v("\n전역 렉시컬 환경 : 코드가 로드되면 곧바로 생성됨"),n("br"),t._v("\n함수의 렉시컬 환경 : 함수가 호출되면 곧바로 생성됨")])]),t._v(" "),n("h3",{attrs:{id:"_3-1-스코프-체인에-의한-변수-검색"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-스코프-체인에-의한-변수-검색"}},[t._v("#")]),t._v(" 3-1. 스코프 체인에 의한 변수 검색")]),t._v(" "),n("ul",[n("li",[t._v("자바스크립트 엔진은 스코프 체인을 따라 변수를 참조하는 코드의 스코프에서"),n("br"),t._v("\n상위 스코프 방향으로 이동하며 선언된 변수를 검색함")]),t._v(" "),n("li",[t._v("절대 하위 스코프로 내려가면서 식별자를 검색하는 일은 없음"),n("br"),t._v("\n(상위 스코프에서 유효한 변수는 하위 스코프에서 자유롭게 참조 가능하지만"),n("br"),t._v("\n하위 스코프에서 유효한 변수를 상위 스코프에서 참조할 수 없다는 것을 의미)")]),t._v(" "),n("li",[t._v("스코프 체인으로 연결된 스코프의 계층적 구조는 부자 관계로 이뤄진 상속과 유사함")])]),t._v(" "),n("h4",{attrs:{id:"자바스크립트-엔진이-스코프-체인을-통해-변수를-검색하는-과정"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-엔진이-스코프-체인을-통해-변수를-검색하는-과정"}},[t._v("#")]),t._v(" <자바스크립트 엔진이 스코프 체인을 통해 변수를 검색하는 과정>")]),t._v(" "),n("ol",[n("li",[t._v("x 변수를 참조하는 코드의 스코프인 inner 함수의 지역 스코프에서 x 변수가 선언되었는지 검색"),n("br"),t._v("\n-> inner 함수 내에는 선언된 x 변수가 존재하므로 검색된 변수를 참조하고 검색 종료")]),t._v(" "),n("li",[t._v("y 변수를 참조하는 코드의 스코프인 inner 함수의 지역 스코프에서 y 변수가 선언되었는지 검색"),n("br"),t._v("\n-> inner 함수 내에는 선언된 y 변수가 존재하지 않으므로 상위 스코프인 outer 함수의 지역 스코프로 이동"),n("br"),t._v("\n-> outer 함수 내에도 선언된 y 변수가 존재하지 않으므로 또 다시 상위 스코프인 전역 스코프로 이동"),n("br"),t._v("\n-> 전역 스코프에는 선언된 y 변수가 존재하므로 검색된 변수를 참조하고 검색 종료")]),t._v(" "),n("li",[t._v("z 변수를 참조하는 코드의 스코프인 inner 함수의 지역 스코프에서 z 변수가 선언되었는지 검색"),n("br"),t._v("\n-> inner 함수 내에는 선언된 z 변수가 존재하지 않으므로 상위 스코프인 outer 함수의 지역 스코프로 이동"),n("br"),t._v("\n-> outer 함수 내에는 선언된 z 변수가 존재하므로 검색된 변수를 참조하고 검색 종료")])]),t._v(" "),n("h3",{attrs:{id:"_3-2-스코프-체인에-의한-함수-검색"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-스코프-체인에-의한-함수-검색"}},[t._v("#")]),t._v(" 3-2. 스코프 체인에 의한 함수 검색")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//전역에서 정의된 함수")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global function foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 내부에서 정의된 함수")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'local function foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("함수 선언문으로 함수 정의 시 런타임 이전에 함수 객체가 먼저 생성되며,"),n("br"),t._v("\n자바스크립트 엔진은 함수 이름과 동일한 이름의 식별자를 암묵적으로 선언하고 생성된 함수 객체를 할당함"),n("br"),t._v("\n따라 위 예제의 모든 함수는 함수 이름과 동일한 이름의 식별자에 할당됨.")]),t._v(" "),n("p",[t._v("foo 함수 호출 시 자바스크립트 엔진은 함수 호출을 위해 먼저 함수를 가리키는 식별자 foo를 검색함"),n("br"),t._v("\n이처럼 함수도 식별자에 할당되기 때문에 스코프를 가짐.")]),t._v(" "),n("p",[t._v("사실 함수는 식별자에 함수 객체가 할당된 것 외에 일반 변수와 다를 바 없음."),n("br"),t._v("\n따라 스코프를 '변수를 검색할 때 사용하는 규칙' 이라고 표현하기보다"),n("br"),t._v("\n'식별자를 검색하는 규칙' 이라고 표현하는게 좀 더 적합")]),t._v(" "),n("h2",{attrs:{id:"_4-함수-레벨-스코프"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-함수-레벨-스코프"}},[t._v("#")]),t._v(" 4. 함수 레벨 스코프")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("블록 레벨 스코프 :"),n("br"),t._v("\n모든 코드 블록(if, for, while, try/catch 등)이 지역 스코프를 만듬"),n("br"),t._v("\n대부분의 프로그래밍 언어는 블록 레벨 스코프를 사용")])]),t._v(" "),n("li",[n("p",[t._v("함수 레벨 스코프 :"),n("br"),t._v("\n코드 블록이 아닌 오로지 함수의 코드 블록(함수 몸체)에 의해서만 지역 스코프가 생성됨"),n("br"),t._v("\nvar 키워드로 선언된 변수는 함수 레벨 스코프를 가지지만"),n("br"),t._v("\nES6에서 도입된 let, const 키워드는 블록 레벨 스코프를 지원함")]),t._v(" "),n("p",[t._v("함수 밖에서 var 키워드로 선언된 변수는 코드 블록 내에서 선언되었다 하더라도 모두 전역 변수."),n("br"),t._v("\n-> 의도치 않게 값이 변경되는 부작용을 발생시킴")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//블록 내에서 선언되었지만 var 키워드로 선언된 변수는 함수 레벨 스코프만 인정하기 때문에 전역 변수. ")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//이미 선언된 전역 변수와 중복 선언되어 의도치 않게 전역 변수의 값이 재할당 됨")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n")])])]),n("h2",{attrs:{id:"_5-렉시컬-스코프"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-렉시컬-스코프"}},[t._v("#")]),t._v(" 5. 렉시컬 스코프")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("동적 스코프"),n("br"),t._v("\n함수를 "),n("strong",[t._v("어디서 호출했는지")]),t._v("에 따라 함수의 상위 스코프를 결정함."),n("br"),t._v("\n함수를 정의하는 시점에는 함수가 어디서 호출될지 알 수 없고,"),n("br"),t._v("\n함수가 호출되는 시점에 동적으로 상위 스코프를 결정해야 하기 때문에 동적 스코프라고 부름")])]),t._v(" "),n("li",[n("p",[t._v("정적 스코프 (=렉시컬 스코프)"),n("br"),t._v("\n함수를 "),n("strong",[t._v("어디서 정의했는지")]),t._v("에 따라 함수의 상위 스코프를 결정함."),n("br"),t._v("\n동적 스코프 방식처럼 상위 스코프가 동적으로 변하지 않고"),n("br"),t._v("\n함수 정의가 평가되는 시점에 상위 스코프가 정적으로 결정되기 떄문에 정적 스코프라고 부름")])])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("자바스크립트를 비롯한 대부분의 프로그래밍 언어는 렉시컬 스코프를 따름."),n("br"),t._v("\n따라 함수가 호출된 위치는 상위 스코프 결정에 아무 영향도 주지 않으며"),n("br"),t._v("\n함수를 어디서 정의했는지에 따라 상위 스코프를 결정함"),n("br"),t._v("\n즉, "),n("strong",[t._v("함수의 상위 스코프는 언제나 자신이 정의된 스코프")])]),t._v(" "),n("p",[t._v("이처럼 함수의 상위 스코프는 함수 정의가 실행될 때 정적으로 결정됨."),n("br"),t._v("\n함수 정의(함수 선언문 또는 함수 표현식)가 실행되어 생성된 함수 객체는 이렇게 결정된 상위 스코프를 기억함"),n("br"),t._v("\n함수가 호출될 때마다 함수의 상위 스코프를 참조할 필요가 있기 때문")]),t._v(" "),n("p",[t._v("또한 렉시컬 스코프는 클로저와 깊은 관계가 있음")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),n("p",[t._v("위 예제에서 bar 함수는 전역에서 정의된 함수."),n("br"),t._v("\n함수 선언문으로 정의된 bar 함수는 전역 코드가 실행되기 전에 먼저 평가되어 함수 객체를 생성함"),n("br"),t._v("\n이때 생성된 bar 함수 객체는 자신이 정의된 스코프(전역 스코프)를 기억함"),n("br"),t._v("\n그리고 bar 함수가 호출되면 호출된 곳이 어딘지에 상관없이 자신이 기억하고 있는 전역 스코프를 상위 스코프로 사용함")])])}),[],!1,null,null,null);s.default=r.exports}}]);