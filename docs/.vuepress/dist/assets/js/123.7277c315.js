(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{481:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"타입스크립트-알아보기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입스크립트-알아보기"}},[t._v("#")]),t._v(" 타입스크립트 알아보기")]),t._v(" "),a("p",[t._v("2023.01.13")]),t._v(" "),a("p",[t._v("TS는 사용 방식 면에서 독특한 언어."),a("br"),t._v("\n다른 고수준 언어인 JS로 컴파일 되며, 실행도 TS가 아닌 JS로 이루어짐."),a("br"),t._v("\n따라 타입스크립트와 자바스크립트의 관계는 필연적으로 밀접한 관계.")]),t._v(" "),a("h2",{attrs:{id:"_1-타입스크립트와-자바스크립트의-관계-이해하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-타입스크립트와-자바스크립트의-관계-이해하기"}},[t._v("#")]),t._v(" 1. 타입스크립트와 자바스크립트의 관계 이해하기")]),t._v(" "),a("h4",{attrs:{id:"타입스크립트는-자바스크립트의-상위-집합"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입스크립트는-자바스크립트의-상위-집합"}},[t._v("#")]),t._v(" 타입스크립트는 자바스크립트의 상위 집합")]),t._v(" "),a("ul",[a("li",[t._v("타입이 정의된, JS의 상위 집합 (superset)")]),t._v(" "),a("li",[t._v("모든 JS 프로그램 = 이미 TS 프로그램"),a("br"),t._v("\nTS는 별도의 문법을 가지고 있으므로 일반적으로는 유효한 JS 프로그램은 아님")]),t._v(" "),a("li",[t._v("서로 다른 확장자(js(.jsx) / .ts(.tsx))를 사용하지만"),a("br"),t._v("\nTS는 JS의 상위 집합이기 때문에 .js 파일에 있는 코드는 이미 TS라고 할 수 있음"),a("br"),t._v("\n따라 JS -> TS 마이그레이션 쉬움 (일부분만 적용 가능)")])]),t._v(" "),a("h4",{attrs:{id:"ts는-js-런타임-동작을-모델링하는-타입-시스템을-가지고-있음"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts는-js-런타임-동작을-모델링하는-타입-시스템을-가지고-있음"}},[t._v("#")]),t._v(" TS는 JS 런타임 동작을 모델링하는 타입 시스템을 가지고 있음")]),t._v(" "),a("ul",[a("li",[t._v("때문에 런타임 오류를 발생시키는 코드를 찾아내려고 함")]),t._v(" "),a("li",[t._v("but, 모든 오류를 찾아내리라 기대하면 안됨."),a("br"),t._v("\n타입 체커를 통과하면서도 런타임 오류를 발생시키는 코드는 존재할 수 있음")])]),t._v(" "),a("h4",{attrs:{id:"ts-타입-시스템은-전반적으로-js의-동작을-모델링함"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-타입-시스템은-전반적으로-js의-동작을-모델링함"}},[t._v("#")]),t._v(" TS 타입 시스템은 전반적으로 JS의 동작을 모델링함")]),t._v(" "),a("ul",[a("li",[t._v("다만 잘못된 매개변수 개수로 함수를 호출하는 경우처럼,"),a("br"),t._v("\nJS에서는 허용되지만 TS에서는 문제가 되는 경우도 있음")]),t._v(" "),a("li",[t._v("이런 문법의 엄격함은 취향의 차이이며 필요성에 맞게 선택하면 됨")])]),t._v(" "),a("h2",{attrs:{id:"_2-타입스크립트-설정-이해하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-타입스크립트-설정-이해하기"}},[t._v("#")]),t._v(" 2. 타입스크립트 설정 이해하기")]),t._v(" "),a("h4",{attrs:{id:"ts-컴파일러의-설정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-컴파일러의-설정"}},[t._v("#")]),t._v(" TS 컴파일러의 설정")]),t._v(" "),a("ul",[a("li",[t._v("매우 많은 설정을 할 수 있음 (거의 100개 정도)")]),t._v(" "),a("li",[t._v("해당 설정들은 커맨드 라인 or tsconfig.json 설정 파일에서 사용 가능함")]),t._v(" "),a("li",[t._v("tsconfig.json 설정 파일 사용을 권장함"),a("br"),t._v("\n협업 시 가이드가 되며, tsc --init만 실행하면 설정 파일이 간단히 생성되기 때문")]),t._v(" "),a("li",[t._v("TS의 설정들은 어디서 소스 파일을 찾을지,"),a("br"),t._v("\n어떤 종류의 출력을 생성할지 제어하는 내용부터"),a("br"),t._v("\n언어 자체의 핵심 요소들을 제어하는 설정까지 있음"),a("br"),t._v("\n(대부분의 언어에서는 허용치 않는 고수준 설계의 설정)"),a("br"),t._v("\n=> 어떻게 설정하느냐에 따라 완전히 다른 언어처럼 느껴질 수 있음")])]),t._v(" "),a("h4",{attrs:{id:"noimplicitany-strictnullchecks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noimplicitany-strictnullchecks"}},[t._v("#")]),t._v(" noImplicitAny, strictNullChecks")]),t._v(" "),a("p",[t._v("설정을 제대로 사용하려면 noImplicitAny, strictNullChecks를 이해해야 함"),a("br"),t._v("\n이 외의 다른 설정들을 모두 엄격히 체크하고 싶다면 strict 설정 사용하면 됨."),a("br"),t._v("\n(사용 시 대부분의 오류를 잡아냄)")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("noImplicitAny")])]),t._v(" "),a("ul",[a("li",[t._v("변수들이 미리 정의된 타입을 가져야하는지 여부 제어")]),t._v(" "),a("li",[t._v("해제 시 타입들이 any로 간주됨 (=암시적 any)"),a("br"),t._v("\n즉, TS의 타입체커가 무력해짐")]),t._v(" "),a("li",[t._v("TS는 타입 정보를 가질 때 가장 효과적이므로 되도록이면 설정 권장함"),a("br"),t._v("\n(문제 발견하기가 수월해지고, 코드 가독성이 좋아지며, 개발자의 생산성 향상됨)\n"),a("br"),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("strictNullChecks")])]),t._v(" "),a("ul",[a("li",[t._v("null과 undefined가 모든 타입에서 허용되는지 확인하는 설정")]),t._v(" "),a("li",[t._v("null과 undefined 관련된 오류를 잡아내는데 효율적이지만 코드 작성이 까다로워짐")]),t._v(" "),a("li",[t._v("TS가 처음이거나 마이그레이션하는 경우 제외하고 사용을 추천")]),t._v(" "),a("li",[t._v("strictNullChecks를 설정하려면 noImplicitAny를 먼저 설정해야 함")]),t._v(" "),a("li",[t._v("'undefined는 객체가 아닙니다.' 같은 런타임 오류를 방지하기 위해서는 설정하는 것이 좋음")]),t._v(" "),a("li",[t._v("프로젝트가 거대해질수록 설정 변경은 어려워지므로 가능한 초반에 설정하는 것을 권장")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-코드-생성과-타입이-관계없음을-이해하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-코드-생성과-타입이-관계없음을-이해하기"}},[t._v("#")]),t._v(" 3. 코드 생성과 타입이 관계없음을 이해하기")]),t._v(" "),a("p",[t._v("TS 컴파일러는 두 가지 역할을 수행함")]),t._v(" "),a("ul",[a("li",[t._v("최신 TS/JS를 브라우저에서 동작할 수 있도록 구버전의 JS로 트랜스파일(번역 + 컴파일)함")]),t._v(" "),a("li",[t._v("코드의 타입 오류를 체크함")])]),t._v(" "),a("p",[t._v("위의 두 가지 역할은 서로 완벽히 독립적."),a("br"),t._v("\n즉, TS가 JS로 변환될 때 코드 내의 타입에는 영향을 주지 않으며,"),a("br"),t._v("\nJS의 실행 시점에도 타입은 영향을 미치지 않음")]),t._v(" "),a("h4",{attrs:{id:"타입-오류가-있는-코드도-컴파일이-가능하다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입-오류가-있는-코드도-컴파일이-가능하다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("타입 오류가 있는 코드도 컴파일이 가능하다.")])]),t._v(" "),a("ul",[a("li",[t._v("컴파일은 타입 체크와 독립적으로 동작하기 때문에,"),a("br"),t._v("\n타입 오류가 있는 코드도 컴파일(코드 생성)이 가능함")]),t._v(" "),a("li",[t._v("타입스크립트 오류는 C나 Java 같은 언어들의 경고와 비슷함"),a("br"),t._v("\n문제가 될 만한 부분을 알려주지만, 빌드를 멈추지는 않음"),a("br"),t._v("\n따라 문제가 된 오류를 수정하지 않더라도 TS는 컴파일된 산출물을 생성하기 때문에,"),a("br"),t._v("\n애플리케이션의 다른 부분을 테스트할 수 있음")]),t._v(" "),a("li",[t._v("만약 오류가 있을 때 컴파일하지 않으려면 tsconfig.json에"),a("br"),t._v("\nnoEmitOnError를 설정하거나 빌드 도구에 동일하게 적용")])]),t._v(" "),a("h4",{attrs:{id:"런타임에는-타입-체크가-불가능하다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#런타임에는-타입-체크가-불가능하다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("런타임에는 타입 체크가 불가능하다")])]),t._v(" "),a("ul",[a("li",[t._v("TS의 타입은 제거 가능(erasable)하며,"),a("br"),t._v("\n실제로 JS로 컴파일되는 과정에서 모든 인터페이스, 타입, 타입 구문은 그냥 제거됨")]),t._v(" "),a("li",[t._v("instanceof 체크는 런타임에 일어나는데 타입스크립트의 타입은 런타임 전에 제거되므로"),a("br"),t._v("\ninstanceof 대상이 TS의 타입이면 런타임 시점에 아무런 역할을 할 수 없음"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Square "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rectangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("=>"),a("br"),t._v("\n이를 해결하려면 런타임에 타입 정보를 유지하는 방법이 필요함"),a("br"),t._v("\n속성 체크는 런타임에 접근 가능한 값에만 관련되지만,"),a("br"),t._v("\n타입 체커 역시 shape 타입을 Rectangle로 보정해주기 때문에 오류가 사라짐"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'height'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("=>"),a("br"),t._v("\n타입 정보를 유지하는 또 다른 방법으로는"),a("br"),t._v("\n런타임에 접근 가능한 타입 정보를 명시적으로 저장하는 태그 기법이 있음"),a("br"),t._v("\n여기서 Shape 타입은 '태그된 유니온'의 한 예시."),a("br"),t._v("\n이 기법은 런타임에 타입 정보를 손쉽게 유지할 수 있기 때문에, TS에서 흔하게 볼 수 있음"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    kind"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'square'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    kind"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rectangle'")]),t._v("\n    height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Square "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rectangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rectangle'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("=>"),a("br"),t._v("\n타입(런타임 접근 불가)과 값(런타입 접근 가능)을 둘 다 사용하는 기법도 있음"),a("br"),t._v("\n타입을 클래스로 만드는 것. (Square과 Rectangle을 클래스로)"),a("br"),t._v("\n인터페이스는 타입으로만 사용 가능하지만, Rectangle을 클래스로 선언하면"),a("br"),t._v("\n타입과 값으로 모두 사용할 수 있으므로 오류가 없음"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Shape")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Square "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rectangle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Rectangle이 타입으로 참조됨")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shape "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Rectangle이 값으로 참조됨")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" shape"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"타입-연산은-런타임에-영향을-주지-않는다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입-연산은-런타임에-영향을-주지-않는다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("타입 연산은 런타임에 영향을 주지 않는다")])]),t._v(" "),a("p",[t._v("string or number 타입인 값을 항상 number로 정제하는 경우,"),a("br"),t._v("\n아래의 코드는 타입 체커를 통과하지만 잘못된 방법을 사용함")]),t._v(" "),a("p",[t._v("as number는 타입 연산이고 런타임 동작에"),a("br"),t._v("\n아무런 영향을 미치지 않기 때문에 코드에 아무런 정제 과정이 없음")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//작성한 TS 코드")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//변환된 JS 코드")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("값을 정제하기 위해서는 런타임의 타입을 체크해야 하고,"),a("br"),t._v("\nJS 연산을 통해 변환을 수행해야 함")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"런타임-타입은-선언된-타입과-다를-수-있다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#런타임-타입은-선언된-타입과-다를-수-있다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("런타임 타입은 선언된 타입과 다를 수 있다")])]),t._v(" "),a("p",[t._v("TS의 타입은 런타임에 제거됨."),a("br"),t._v("\nJS일 경우 의도와 다르게 다른 타입으로 함수를 호출할 수 있음")]),t._v(" "),a("p",[t._v("순수 TS에서도 비동기로 API를 호출할 경우,"),a("br"),t._v("\n반환받는 데이터 값을 잘못 파악했다던가 API가 변경된 등의 이유로"),a("br"),t._v("\n기존에 정의한 타입과는 다른 데이터를 받을 수 있음")]),t._v(" "),a("p",[t._v("=>"),a("br"),t._v("\n즉, TS에서는 런타임 타입과 선언된 타입이 맞지 않을 수 있음"),a("br"),t._v("\n타입이 달라지는 혼란스러운 상황은 가능한 피해야 하지만,"),a("br"),t._v("\n선언된 타입이 언제든지 달라질 수 있다는 것을 명심해야 함")]),t._v(" "),a("h4",{attrs:{id:"타입스크립트-타입으로는-함수를-오버로드-할-수-없다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입스크립트-타입으로는-함수를-오버로드-할-수-없다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("타입스크립트 타입으로는 함수를 오버로드 할 수 없다")])]),t._v(" "),a("ul",[a("li",[t._v("C++ 같은 언어는 동일한 이름에 매개변수만 다른 여러 버전의 함수를 허용함 (=함수 오버로딩)")]),t._v(" "),a("li",[t._v("But, TS에서는 타입과 런타임의 동작이 무관하기 때문에 함수 오버로딩이 불가능함")]),t._v(" "),a("li",[t._v("TS가 지원하는 함수 오버로딩 기능은 온전히 타입 수준에서만 동작."),a("br"),t._v("\n즉, 하나의 함수에 대해 여러개 선언문을 작성할 수 있지만 구현체는 오직 하나 뿐."),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("위의 두 개의 add 선언문은 타입 정보를 제공할 뿐,"),a("br"),t._v("\n두 선언문은 TS가 JS로 변환되면서 제거되며 구현체만 남게 됨")])]),t._v(" "),a("h4",{attrs:{id:"타입스크립트-타입은-런타임-성능에-영향을-주지-않는다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입스크립트-타입은-런타임-성능에-영향을-주지-않는다"}},[t._v("#")]),t._v(" "),a("strong",[t._v("타입스크립트 타입은 런타임 성능에 영향을 주지 않는다")])]),t._v(" "),a("p",[t._v("타입과 타입 연산자는 JS 변환 시점에 제거되기 떄문에"),a("br"),t._v("\n런타임 성능에 아무 영향을 주지 않음"),a("br"),t._v("\n즉, TS의 정적 타입은 실제로 비용이 전혀 들지 않음")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("'런타임' 오버헤드가 없는 대신, TS 컴파일러는 '빌드타임' 오버헤드 존재")]),t._v(" "),a("ul",[a("li",[t._v("TS 팀은 컴파일러 성능을 매우 중요하게 생각했으므로"),a("br"),t._v("\n컴파일은 일반적으로 상당히 빠른 편이며, 특히 증분 빌드 시에 효율적임")]),t._v(" "),a("li",[t._v("오버헤드가 커지는 경우, 빌드 도구에서"),a("br"),t._v("\n'transpile only'를 설정해 타입 체크를 건너뛸 수 있음")])])]),t._v(" "),a("li",[a("strong",[t._v("어떤 경우든 호환성과 성능 사이의 선택은 타입과는 무관함")]),t._v(" "),a("ul",[a("li",[t._v("TS가 컴파일하는 코드는 오래된 런타임 환경을 지원하기 위해"),a("br"),t._v("\n호환성을 높이고 성능 오버헤드를 감안할지,"),a("br"),t._v("\n호환성을 포기하고 성능 중심의 네이티브 구현체를 우선할지 선택할 수 있음")]),t._v(" "),a("li",[t._v("어떤 경우든 호환성과 성능 사이의 선택은"),a("br"),t._v("\n컴파일 타깃과 언어 레벨의 문제이기 때문에 타입과는 무관함")])])])]),t._v(" "),a("h2",{attrs:{id:"_4-구조적-타이핑에-익숙해지기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-구조적-타이핑에-익숙해지기"}},[t._v("#")]),t._v(" 4. 구조적 타이핑에 익숙해지기")]),t._v(" "),a("ul",[a("li",[t._v("JS는 본질적으로 덕 타이핑 기반."),a("br"),t._v("\n어떤 함수의 매개변수 값이 모두 제대로 주어진다면,"),a("br"),t._v("\n값이 어떻게 만들어졌는지 신경쓰지 않고 사용\n"),a("ul",[a("li",[t._v("덕 타이핑 :"),a("br"),t._v("\n객체가 어떤 타입에 부합하는 변수와 메서드를 가질 경우"),a("br"),t._v("\n객체를 해당 타입에 속하는 것으로 간주하는 방식\n"),a("br"),a("br")])])]),t._v(" "),a("li",[t._v("TS는 이런 동작을 그대로 모델링하기 위해 구조적 타이핑을 사용."),a("br"),t._v("\n어떤 인터페이스에 할당 가능한 값이라면 타입 선언에 명시적으로 나열된 속성들을 가지고 있음"),a("br"),t._v("\n즉, 타입은 "),a("strong",[t._v("봉인되어 있지 않음")]),t._v(" "),a("ul",[a("li",[t._v("두 타입의 관계를 선언하지 않았음에도 두 타입의 구조가 호환된다면"),a("br"),t._v("\n동일 함수를 같이 사용하는 등의 동작 가능")]),t._v(" "),a("li",[t._v("구조적 타이핑 떄문에 문제가 발생하기도 함"),a("br"),t._v("\n함수 작성 시 호출에 사용되는 매개변수의 속성들이"),a("br"),t._v("\n매개변수의 타입에 선언된 속성만을 가질거라 생각하기 쉬움. (=봉인된 타입)")]),t._v(" "),a("li",[t._v("TS 타입 시스템에서는 봉인된 타입을 표현할 수 없음"),a("br"),t._v("\n타입이 '열려 있기 때문' (=타입의 확장에 열려있다는 의미)"),a("br"),t._v("\n즉, 타입에 선언된 속성 외에 임의의 속성을 추가하더라도 오류가 발생하지 않음\n"),a("br"),a("br")])])]),t._v(" "),a("li",[t._v("클래스 역시 구조적 타이핑 규칙을 따름."),a("br"),t._v("\n(클래스의 인스턴스가 예상과 다를 수 있음)\n"),a("br"),a("br")]),t._v(" "),a("li",[t._v("구조적 타이핑을 사용하면 유닛 테스팅을 쉽게 적용할 수 있으며,"),a("br"),t._v("\n라이브러리 간의 의존성을 완벽히 분리할 수 있다는 장점이 있음")])]),t._v(" "),a("h2",{attrs:{id:"_5-any-타입-지정하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-any-타입-지정하기"}},[t._v("#")]),t._v(" 5. any 타입 지정하기")]),t._v(" "),a("p",[t._v("TS의 타입 시스템은 점진적이고 선택적."),a("br"),t._v("\n이 기능들의 핵심은 any 타입")]),t._v(" "),a("ul",[a("li",[t._v("점진적 : 코드에 타입을 조금씩 추가할 수 있음")]),t._v(" "),a("li",[t._v("선택적 : 언제든 타입 체커를 해제할 수 있음")])]),t._v(" "),a("p",[t._v("하지만 any를 사용하면 TS의 수많은 장점을 누릴 수 없음"),a("br"),t._v("\n타입 체커와 TS 언어 서비스를 무력화시켜버림."),a("br"),t._v("\n또한 문제 원인을 감추며, 개발 경험을 나쁘게 하고, 타입 시스템의 신뢰도를 떨어뜨림"),a("br"),t._v("\n따라 최대한 사용을 피하도록 해야 함")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("any 타입에는 타입 안정성이 없다.")]),a("br"),t._v("\nas any 같은 타입 단언 선언 시 타입 체커는 선언에 따라 타입을 판단하게 됨."),a("br"),t._v("\n따라 타입 체크를 하지 못하므로 에러 발생 가능성 높아짐")]),t._v(" "),a("li",[a("strong",[t._v("any는 함수 시그니처를 무시해버린다.")]),a("br"),t._v("\n함수 작성 시에는 시그니처를 명시해야 함."),a("br"),t._v("\n호출하는 쪽은 약속된 타입의 입력을 제공하고 함수는 약속된 타입의 출력을 반환함"),a("br"),t._v("\n하지만 any 타입을 사용하면 시그니처를 무시하게 되어 약속을 어길 수 있게 됨"),a("br"),t._v("\nJS에서는 종종 암시적으로 타입이 변환되기 때문에 이런 경우 문제가 발생할 수 있음")]),t._v(" "),a("li",[a("strong",[t._v("any 타입에는 언어 서비스가 적용되지 않는다.")]),a("br"),t._v("\nTS 언어 서비스는 기본적으로 자동완성 기능과 적절한 도움말을 제공함"),a("br"),t._v("\n하지만 any 타입인 심벌을 사용할 경우 아무 도움을 받지 못함")]),t._v(" "),a("li",[a("strong",[t._v("any 타입은 코드 리팩터링 때 버그를 감춘다.")]),a("br"),t._v("\nany를 사용하면 타입 체커를 통과함에도 불구하고 런타임에는 오류가 발생할 수 있음"),a("br"),t._v("\nany가 아니라 구체적인 타입을 사용했다면 타입 체커가 오류를 발견했을 것")]),t._v(" "),a("li",[a("strong",[t._v("any는 타입 설계를 감춰버린다.")]),a("br"),t._v("\n애플리케이션의 상태 등의 객체의 구조는 복잡하기 떄문에"),a("br"),t._v("\n많은 속성의 타입을 하나하나 작성해야 하는데,"),a("br"),t._v("\nany 타입을 사용하면 간단히 끝나게 됨."),a("br"),t._v("\n하지만 상태 객체의 설계를 감춰버리기 때문에 타입 설계가 불분명해짐"),a("br"),t._v("\n즉, 설계가 잘 되었는지 코드를 검토하기 어려워짐."),a("br"),t._v("\n따라 깔끔하고 명료한 코드 작성을 위해 설계가 명확히 보이도록"),a("br"),t._v("\n타입을 제대로 작성하는 것을 권장함")]),t._v(" "),a("li",[a("strong",[t._v("any는 타입시스템의 신뢰도를 떨어뜨린다.")]),a("br"),t._v("\n보통 실수를 해도 타입 체커가 실수를 잡아주기 때문에 코드의 신뢰도가 높아짐"),a("br"),t._v("\nany 타입을 쓰지 않으면 런타임에 발견될 오류를 미리 잡을 수 있고 신뢰도를 높일 수 있음"),a("br"),t._v("\nTS는 개발자의 삶을 편하게 하는데 목적이 있지만,"),a("br"),t._v("\n코드 내 존재하는 수많은 any 타입으로 JS보다 일을 더 어렵게 만들기도 함")])])])}),[],!1,null,null,null);s.default=r.exports}}]);