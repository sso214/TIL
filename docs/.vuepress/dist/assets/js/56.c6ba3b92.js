(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{411:function(t,s,n){"use strict";n.r(s);var a=n(44),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_21장-빌트인-객체"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_21장-빌트인-객체"}},[t._v("#")]),t._v(" 21장. 빌트인 객체")]),t._v(" "),n("h2",{attrs:{id:"_1-자바스크립트-객체의-분류"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-자바스크립트-객체의-분류"}},[t._v("#")]),t._v(" 1. 자바스크립트 객체의 분류")]),t._v(" "),n("p",[t._v("자바스크립트 객체는 크게 3개의 객체로 분류할 수 있음")]),t._v(" "),n("ul",[n("li",[t._v("표준 빌트인 객체\n"),n("ul",[n("li",[t._v("ECMAScript 사양에 정의된 객체. 자바스크립트 실행 환경과 관계없이 언제나 사용 가능")]),t._v(" "),n("li",[t._v("애플리케이션 전역의 공통 기능을 제공함")]),t._v(" "),n("li",[t._v("전역 객체의 프로퍼티로서 제공됨. 따라 별도의 선언 없이 전역 변수처럼 언제나 참조 가능")])])]),t._v(" "),n("li",[t._v("호스트 객체\n"),n("ul",[n("li",[t._v("ECMAScript 사양에 정의되어 있지 않지만 자바스크립트 실행 환경에서 추가로 제공하는 객체")]),t._v(" "),n("li",[t._v("브라우저 환경 : DOM, BOM, Web Storage와 같은 클라이언트 사이드 Web API를 호스트 객체로 제공."),n("br"),t._v("\nNode.js 환경 : Node.js 고유의 API를 호스트 객체로 제공함")])])]),t._v(" "),n("li",[t._v("사용자 정의 객체\n"),n("ul",[n("li",[t._v("표준 빌트인 객체와 호스트 객체처럼 기본 제공되는 객체가 아닌 사용자가 직접 정의한 객체")])])])]),t._v(" "),n("h2",{attrs:{id:"_2-표준-빌트인-객체"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-표준-빌트인-객체"}},[t._v("#")]),t._v(" 2. 표준 빌트인 객체")]),t._v(" "),n("ul",[n("li",[t._v("자바스크립트는 40여개의 표준 빌트인 객체를 제공함"),n("br"),t._v("\n(Object.String, Array, Map/Set, Function, JSON, Error 등)")]),t._v(" "),n("li",[t._v("Math, Reflect, JSON을 제외한 표준 빌트인 객체는 모두 인스턴스를 생성할 수 있는 생성자 함수")]),t._v(" "),n("li",[t._v("생성자 함수 객체인 표준 빌트인 객체 : 프로토타입 메서드와 정적 메서드를 제공"),n("br"),t._v("\n생성자 함수가 아닌 표준 빌트인 객체 : 정적 메서드만 제공")])]),t._v(" "),n("p",[t._v("생성자 함수인 표준 빌트인 객체가 생성한 인스턴스의 프로토타입은"),n("br"),t._v("\n표준 빌트인 객체의 prototype 프로퍼티에 바인딩 된 객체")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String 생성자 함수에 의한 String 객체 생성")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" strObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Stinrg 생성자 함수를 통해 생성한 strObj 객체의 프로토타입은 String.prototype")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),n("ul",[n("li",[t._v("표준 빌트인 객체의 prototype 프로퍼티에 바인딩된 객체는 다양한 기능의 빌트인 프로토타입 메서드를 제공")]),t._v(" "),n("li",[t._v("표준 빌트인 객체는 인스턴스 없이도 호출 가능한 빌트인 정적 메서드를 제공함")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Number 생성자 함수에 의한 Number 객체 생성")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" numObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Number {1.5}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//toFixed는 Number.prototype의 프로토타입 메서드")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//isInteger는 Number의 정적 메서드")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInteger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),n("h2",{attrs:{id:"_3-원시값과-래퍼-객체"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-원시값과-래퍼-객체"}},[t._v("#")]),t._v(" 3. 원시값과 래퍼 객체")]),t._v(" "),n("h3",{attrs:{id:"원시값이-있는데도-string-number-boolean-등의-표준-빌트인-생성자-함수가-존재하는-이유"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#원시값이-있는데도-string-number-boolean-등의-표준-빌트인-생성자-함수가-존재하는-이유"}},[t._v("#")]),t._v(" 원시값이 있는데도 String, Number, Boolean 등의 표준 빌트인 생성자 함수가 존재하는 이유?")]),t._v(" "),n("p",[t._v("원시 값은 객체가 아니므로 프로퍼티나 메서드를 가질 수 없는데도 원시값인 문자열이 마치 객체처럼 동작함"),n("br"),t._v("\n이는 원시값의 경우 마치 객체처럼 마침표 표기법(or 대괄호 표기법)으로 접근 시 자바스크립트 엔진이"),n("br"),t._v("\n일시적으로 원시값을 연관된 객체로 변환해주기 때문")]),t._v(" "),n("p",[t._v("즉, 원시값을 객체처럼 사용하면 자바스크립트 엔진은 암묵적으로 연관된 객체를 생성해"),n("br"),t._v("\n생성된 객체로 프로퍼티에 접근하거나 메서드를 호출하고 다시 원시값으로 되돌림")]),t._v(" "),n("p",[t._v("이처럼 "),n("strong",[t._v("문자열, 숫자, 불리언 값에 대해 객체처럼 접근하면 생성되는 임시 객체를 래퍼 객체")]),t._v("라고 함")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//원시 타입인 문자열이 프로퍼티와 메서드를 갖고 있는 객체처럼 동작함")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HELLO")]),t._v("\n")])])]),n("p",[t._v("ex)")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str은 문자열을 값으로 가짐")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str은 암묵적으로 생성된 래퍼 객체를 가리킴")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str의 값('hello')은 래퍼 객체의 [[StringData]] 내부 슬롯에 할당됨")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//래퍼 객체에 name 프로퍼티가 동적 추가됨")]),t._v("\nstr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str은 다시 원래의 문자열, 즉 래퍼 객체의 [[StringData]] 내부 슬롯에 할당된 원시값을 가짐")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//이때 위에서 생성된 래퍼 객체는 아무도 참조하지 않는 상태이므로 가비지 컬렉션의 대상이 됨")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str은 새롭게 암묵적으로 생성된 래퍼 객체를 가리킴 (위에서 생성된 래퍼 객체와는 다른)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//새롭게 생성된 래퍼 객체에는 name 프로퍼티가 존재하지 않음")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//식별자 str은 다시 원래 문자열, 즉 래퍼 객체의 [[StringData]] 내부 슬롯에 할당된 원시값을 가짐")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//이때 위에서 생성된 래퍼 객체는 아무도 참조하지 않는 상태이므로 가비지 컬렉션의 대상이 됨")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string hello")]),t._v("\n")])])]),n("ul",[n("li",[t._v("숫자 값에 대해 마침표 표기법으로 접근할 때도 마찬가지.")]),t._v(" "),n("li",[t._v("불리언 값도 문자열/숫자와 같지만 불리언 값으로 메서드 호출하는 경우는 없으므로 그다지 유용하지 않음")]),t._v(" "),n("li",[t._v("ES6에서 새롭게 도입된 원시값인 심벌도 래퍼 객체를 생성함"),n("br"),t._v("\n심벌은 일반적인 원시값과는 달리 리터럴 표기법으로 생성 불가능하고 Symbol 함수를 통해 생성해야 하므로"),n("br"),t._v("\n다른 원시값과는 차이가 있음")]),t._v(" "),n("li",[t._v("이처럼 문자열, 숫자, 불리언, 심벌은 암묵적으로 생성되는 래퍼 객체에 의해 마치 객체처럼 사용 가능하며,"),n("br"),t._v("\n표준 빌트인 객체인 String, Number, Boolean, Symbol의 프로토타입 메서드 또는 프로퍼티를 참조 가능함"),n("br"),t._v("\n따라 String, Number, Boolean 생성자 함수를 new 연산자와 함께 호출해"),n("br"),t._v("\n문자열, 숫자, 불리언 인스턴스를 생성할 필요가 없으며 권장하지도 않음"),n("br"),t._v("\n(Symbol은 생성자 함수가 아니므로 이 논의에서는 제외)")]),t._v(" "),n("li",[t._v("문자열, 숫자, 불리언, 심벌 이외의 원시 값(=null, undefined)는 래퍼 객체를 생성하지 않음"),n("br"),t._v("\n따라 null/undefined 값을 객체처럼 사용하면 에러 발생함")])]),t._v(" "),n("h2",{attrs:{id:"_4-전역-객체"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-전역-객체"}},[t._v("#")]),t._v(" 4. 전역 객체")]),t._v(" "),n("ul",[n("li",[t._v("코드 실행 이전 단계에 자바스크립트 엔진에 의해 어떤 객체보다도 먼저 생성되는 특수한 객체")]),t._v(" "),n("li",[t._v("계층 구조상 어떤 객체에도 속하지 않은 모든 빌트인 객체의 최상위 객체\n"),n("ul",[n("li",[t._v("프로토타입 상속 관계에서 최상위 객체라는 의미 아님")]),t._v(" "),n("li",[t._v("전역 객체는 어떤 객체의 프로퍼티도 아니며 표준 빌트인 객체와 호스트 객체를 프로퍼티로 소유한다는 의미")])])]),t._v(" "),n("li",[t._v("자바스크립트 환경에 따라 지칭하는 이름이 다름\n"),n("ul",[n("li",[t._v("브라우저 환경 : window(또는 self, this, frames)")]),t._v(" "),n("li",[t._v("Node.js 환경 : global")])])]),t._v(" "),n("li",[t._v("표준 빌트인 객체와 환경에 따른 호스트 객체, var 키워드로 선언한 전역 변수와 전역 함수를 프로퍼티로 가짐")])]),t._v(" "),n("h4",{attrs:{id:"globalthis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#globalthis"}},[t._v("#")]),t._v(" globalThis")]),t._v(" "),n("ul",[n("li",[t._v("ES11에서 도입")]),t._v(" "),n("li",[t._v("브라우저 환경과 Node.js 환경에서 전역 객체를 가리키던 다양한 식별자를 통일한 식별자")]),t._v(" "),n("li",[t._v("표준 사양이므로 ECMAScript 표준 사양을 준수하는 모든 환경에서 사용 가능함")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//브라우저 환경")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" window "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" self "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" frames "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Node.js 환경")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nglobalThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" global "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),n("h4",{attrs:{id:"전역-객체의-특징"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#전역-객체의-특징"}},[t._v("#")]),t._v(" 전역 객체의 특징")]),t._v(" "),n("ul",[n("li",[t._v("개발자가 의도적으로 생성 불가능함. (전역 객체를 생성할 수 있는 생성자 함수 제공되지 않음)")]),t._v(" "),n("li",[t._v("전여 깩체의 프로퍼티 참조 시 window(or global)을 생략 가능")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//문자열 'F'를 16진수로 해석하여 10진수로 변환해 반환함  ")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'F'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//15")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window/.parseInt는 parseInt로 호출 가능")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'F'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//15")]),t._v("\n\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parseInt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" parseInt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var 키워드로 선언한 전역 변수")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//선언하지 않은 변수에 값을 암묵적 전역. bar는 전역 변수가 아니라 전역 객체의 프로퍼티")]),t._v("\nbar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//전역 함수")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baz")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baz")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" poo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),n("ul",[n("li",[t._v("전역 객체는 표준 빌트인 객체를 프로퍼티로 가지고 있음")]),t._v(" "),n("li",[t._v("자바스크립트 실행환경에 따라 추가적으로 프로퍼티와 메서드를 가짐\n"),n("ul",[n("li",[t._v("브라우저 환경 : DOM, Canvas, fetch, SVG 같은 클라이언트 사이드 Web API를 호스트 객체로 제공")]),t._v(" "),n("li",[t._v("Node.js 환경 : Node.js 고유의 API를 호스트 객체로 제공")])])]),t._v(" "),n("li",[t._v("var 키워드로 선언한 전역 변수, 암묵적 전역, 전역 함수는 전역 객체의 프로퍼티가 됨")]),t._v(" "),n("li",[t._v("let, const 키워드로 선언한 전역 변수는 전역 객체의 프로퍼티 아님."),n("br"),t._v("\n보이지 않는 개념적인 블록 (전역 렉시컬 환경의 선언적 환경 레코드) 내에 존재하게 됨")]),t._v(" "),n("li",[t._v("브라우저 환경의 모든 자바스크립트 코드는 하나의 전역 객체 window를 공유함"),n("br"),t._v("\n여러 개의 script 코드를 통해 코드를 분리해도 하나의 전역 객체 window를 공유하는 것은 변함 없음"),n("br"),t._v("\n(분리되어 있는 자바스크립트 코드가 하나의 전역을 공유한다는 의미)")]),t._v(" "),n("li",[t._v("전역 객체는 몇 가지 프로퍼티와 메서드를 가짐"),n("br"),t._v("\n전역 객체의 프로퍼티와 메서드는 전역 객체를 가리키는 식별자(window / global)을 생략해 참조/호출 가능하므로"),n("br"),t._v("\n전역 변수와 전역 함수처럼 사용 가능함")])]),t._v(" "),n("h3",{attrs:{id:"_4-1-빌트인-전역-프로퍼티"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-빌트인-전역-프로퍼티"}},[t._v("#")]),t._v(" 4-1. 빌트인 전역 프로퍼티")]),t._v(" "),n("ul",[n("li",[t._v("전역 객체의 프로퍼티를 의미함")]),t._v(" "),n("li",[t._v("주로 애플리케이션 전역에서 사용하는 값 제공")])]),t._v(" "),n("h4",{attrs:{id:"infinity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#infinity"}},[t._v("#")]),t._v(" Infinity")]),t._v(" "),n("ul",[n("li",[t._v("무한다래를 나타내는 숫자값 Infinity를 갖음")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//전역 프로퍼티는 window를 생략하고 참조 가능")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//양의 무한대")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Infinity")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//음의 무한대")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-Infinity")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Infinity는 숫자값")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\n")])])]),n("h4",{attrs:{id:"nan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" NaN")]),t._v(" "),n("ul",[n("li",[t._v("숫자가 아님을 나타내는 숫자값 NaN을 가짐")]),t._v(" "),n("li",[t._v("NaN === Number.NaN 프로퍼티")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyz'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\n")])])]),n("h4",{attrs:{id:"undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),n("ul",[n("li",[t._v("원시 타입 undefined를 값으로 가짐")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("undefined"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),n("h3",{attrs:{id:"_4-2-빌트인-전역-함수"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-빌트인-전역-함수"}},[t._v("#")]),t._v(" 4-2. 빌트인 전역 함수")]),t._v(" "),n("ul",[n("li",[t._v("전역 객체의 메서드")]),t._v(" "),n("li",[t._v("애플리케이션 전역에서 호출 가능한 빌트인 함수")])]),t._v(" "),n("h4",{attrs:{id:"eval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eval"}},[t._v("#")]),t._v(" eval")]),t._v(" "),n("ul",[n("li",[t._v("자바스크립트 코드를 나타내는 문자열을 인수로 전달받음")]),t._v(" "),n("li",[t._v("전달받은 문자열 코드가 표현식이라면 eval 함수는 문자열 코드를 런타임에 평가해 값을 생성")]),t._v(" "),n("li",[t._v("전달받은 인수가 표현식이 아닌 문이라면 eval 함수는 문자열 코드를 런타임에 실행")]),t._v(" "),n("li",[t._v("인수로 전달받은 문자열 코드가 여러 개의 문으로 이루어져 있는 경우 모든 문 실행 후 마지막 결과 값 반환")]),t._v(" "),n("li",[t._v("eval 함수는 자신이 호출된 위치에 해당하는 기존의 스코프를 런타임에 동적으로 수정함")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//주어진 문자열 코드를 런타임에 평가 또는 실행")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//@param {string} code - 코드를 나타내는 문자열")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//@returns {*} 문자열 코드를 평가/실행한 결과값")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//eval(code)")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//표현식인 문")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 + 2;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//표현식이 아닌 문")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var x = 5;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//eval 함수에 의해 런타임에 변수 선언문이 실행되어 x 변수가 선언됨")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//객체 리터럴은 반드시 괄호로 둘러쌈")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'({a : 1})'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{a : 1}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 리터럴은 반드시 괄호로 둘러쌈")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(function(){return 1;})'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//인수로 전달받은 문자열 코드가 여러개의 문일 때 모든 문을 실행 후 마지막 결과 값을 반환함 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 + 2; 3 + 4;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//eval 함수는 런타임에 foo 함수의 스코프를 동적으로 수정함")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var x = 2;'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n\n")])])]),n("h4",{attrs:{id:"isfinite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#isfinite"}},[t._v("#")]),t._v(" isFinite")]),t._v(" "),n("h4",{attrs:{id:"isnan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[t._v("#")]),t._v(" isNaN")]),t._v(" "),n("h4",{attrs:{id:"parsefloat"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat"}},[t._v("#")]),t._v(" parseFloat")]),t._v(" "),n("h4",{attrs:{id:"parseint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#parseint"}},[t._v("#")]),t._v(" parseInt")]),t._v(" "),n("h4",{attrs:{id:"encodeuri-decodeuri"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#encodeuri-decodeuri"}},[t._v("#")]),t._v(" encodeURI / decodeURI")]),t._v(" "),n("h4",{attrs:{id:"encodeuricomponent-decodeuricomponent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#encodeuricomponent-decodeuricomponent"}},[t._v("#")]),t._v(" encodeURIComponent / decodeURIComponent")]),t._v(" "),n("h3",{attrs:{id:"_4-3-암묵적-전역"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-암묵적-전역"}},[t._v("#")]),t._v(" 4-3. 암묵적 전역")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//전역 변수")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//선언하지 않은 식별자에 값을 할당")]),t._v("\n  y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window.y = 20;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//선언하지 않은 식별자 y를 전역에서 참조 가능")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//30")]),t._v("\n")])])]),n("ul",[n("li",[t._v("선언하지 않은 식별자 y는 마치 선언된 전역 변수처럼 동작함."),n("br"),t._v("\n이는 선언하지 않은 식별자에 값을 할당 시 전역 객체의 프로퍼티가 되기 때문")]),t._v(" "),n("li",[t._v("foo 함수 호출 시 자바스크립트 엔진은")])])])}),[],!1,null,null,null);s.default=e.exports}}]);