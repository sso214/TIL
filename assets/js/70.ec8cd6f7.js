(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{494:function(t,s,a){"use strict";a.r(s);var n=a(65),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_19장-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19장-프로토타입"}},[t._v("#")]),t._v(" 19장. 프로토타입")]),t._v(" "),a("p",[t._v("JS는 명령형, 함수형, 프로토타입 기반 객체지향 프로그래밍을 지원하는 멀티 패러다임 프로그래밍 언어")]),t._v(" "),a("p",[t._v("클래스와 상속, 캡슐화를 위한 키워드가 없어 객체지향 언어가 아니라고 오해하는 경우도 있지만"),a("br"),t._v("\n클래스 기반 객체지향 언어보다 더 강력하고 효율적인 객체지향 능력을 지니고 있는"),a("br"),t._v("\n프로토타입 기반의 객체지향 프로그래밍 언어.")]),t._v(" "),a("p",[t._v("JS는 객체 기반의 프로그래밍 언어이며 자바스크립트를 이루고 있는 거의 모든 것이 객체"),a("br"),t._v("\n(원시 타입 값을 제외한 나머지 값들은 모두 객체)")]),t._v(" "),a("h4",{attrs:{id:"클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#클래스"}},[t._v("#")]),t._v(" <클래스>")]),t._v(" "),a("p",[t._v("ES6에서 클래스가 도입되었지만 기존의 프로토타입 기반 객체지향 모델을 폐지하는 것은 아님"),a("br"),t._v("\n사실 클래스도 함수이며, 기존 프로토타입 기반 패턴의 문법적 설탕이라고 볼 수 있음")]),t._v(" "),a("p",[t._v("클래스와 생성자 함수는 모두 프로토타입 기반의 인스턴스를 생성하지만"),a("br"),t._v("\n클래스는 생성자 함수에서 제공하지 않는 기능을 제공하며 더 엄격함")]),t._v(" "),a("p",[t._v("따라 클래스를 프로토타입 기반 객체 생성 패턴의 단순한 문법적 설탕으로 보기보단"),a("br"),t._v("\n새로운 객체 생성 메커니즘으로 보는 것이 좀 더 합당함")]),t._v(" "),a("h2",{attrs:{id:"_1-객체지향-프로그래밍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-객체지향-프로그래밍"}},[t._v("#")]),t._v(" 1. 객체지향 프로그래밍")]),t._v(" "),a("p",[t._v("객체지향 프로그래밍 : 독립적인 객체의 집합으로 프로그램을 표현하려는 프로그래밍 패러다임")]),t._v(" "),a("p",[t._v("실세계의 실체를 인식하는 철학적 사고를 프로그래밍에 접목시키려는 시도에서 시작함"),a("br"),t._v("\n실체는 특징이나 성질을 나타내는 속성을 가지고 있고, 속성을 통해 실체를 인식하거나 구별 가능함")]),t._v(" "),a("p",[t._v("객체지향 프로그래밍은 객체의 상태를 나타내는 데이터(=프로퍼티)와"),a("br"),t._v("\n상태 데이터를 조작할 수 있는 동작(=메서드)을 하나의 논리적 단위로 묶어 생각함")]),t._v(" "),a("p",[t._v("각 객체는 독립적인 부품으로 볼 수 있지만 다른 객체와 관계성을 가질 수 있음"),a("br"),t._v("\n다른 객체와 메세지를 주고받거나 데이터를 처리할 수도 있으며, 상태 데이터나 동작을 상속받아 사용하기도 함")]),t._v(" "),a("ul",[a("li",[t._v("객체 : 속성을 통해 여러 개의 값(상태 데이터, 동작)을 하나의 단위로 구성한 복합적인 자료구조")]),t._v(" "),a("li",[t._v("추상화 : 다양한 속성 중 프로그램에 필요한 속성만 간추려 표현하는 것")]),t._v(" "),a("li",[t._v("명령형 프로그래밍 : 프로그램을 명령어 또는 함수의 목록으로 보는 전통적인 절차지향적 관점")])]),t._v(" "),a("h2",{attrs:{id:"_2-상속과-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-상속과-프로토타입"}},[t._v("#")]),t._v(" 2. 상속과 프로토타입")]),t._v(" "),a("p",[t._v("상속은 객체지향 프로그래밍의 핵심 개념"),a("br"),t._v("\n어떤 객체의 프로퍼티 또는 메서드를 다른 객체가 상속받아 그대로 사용할 수 있는 것을 의미")]),t._v(" "),a("p",[t._v("JS는 프로토타입을 기반으로 상속을 구현해 불필요한 중복을 제거함"),a("br"),t._v("\n(기존의 코드를 적극적으로 재사용하는 방식)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getArea")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Math.PI는 원주율을 나타내는 상수")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" circle1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//반지름이 1인 인스턴스 생성")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" circle2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//반지름이 2인 인스턴스 생성")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Circle 생성자 함수는 인스턴스를 생성할 때마다 동일한 동작을 하는 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//getArea 메서드를 중복 생성하고 모든 인스턴스가 중복 소유함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//getArea 메서드는 하나만 생성해 모든 인스턴스가 공유해 사용하는 것이 바람직함")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getArea "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" circle2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getArea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.14...")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12.56...")]),t._v("\n")])])]),a("p",[t._v("생성자 함수는 동일한 프로퍼티 구조를 갖는 객체를 여러 개 생성할 때 유용하지만"),a("br"),t._v("\n인스턴스 생성 시마다 메서드를 중복 생성하고 모든 인스턴스가 중복 소유함")]),t._v(" "),a("p",[t._v("동일한 생성자 함수에 의해 생성된 모든 인스턴스가 동일한 메서드를 중복 사용하는 것은 메모리 낭비이고,"),a("br"),t._v("\n인스턴스 생성 시마다 메서드를 생성해 퍼포먼스에도 악영향을 주므로"),a("br"),t._v("\n모든 인스턴스가 동일한 내용의 메서드를 사용하는 경우 메서드는 하나만 생성해 공유해 사용하는 것이 바람직함")]),t._v(" "),a("p",[t._v("-> 상속("),a("strong",[t._v("자바스크립트는 프로토타입을 기반을 상속을 구현")]),t._v(")을 통해 불필요한 중복을 제거 가능함")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("radius")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Circle 생성자 함수가 생성한 모든 인스턴스가 getArea 메서드를 공유해 사용할 수 있도록 프로토타입에 추가")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입은 Circle 생성자 함수의 prototype 프로퍼티에 바인딩되어 있음")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getArea")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//인스턴스 생성")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" circle1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" circle2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Circle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Circle 생성자 함수가 생성한 모든 인스턴스는 부모 객체의 역할을 하는")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입 Circle.prototype 으로부터 getArea 메서드를 상속받음")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//즉, Circle 생성자 함수가 생성하는 모든 인스턴스는 하나의 getArea 메서드를 공유함")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getArea "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" circle2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getArea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.14...")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circle2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArea")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12.56...")]),t._v("\n")])])]),a("p",[t._v("Circle 생성자 함수가 생성한 모든 인스턴스는 자신의 프로토타입(상위 객체 역할을 하는)"),a("br"),t._v("\nCircle.prototype의 모든 프로퍼티와 메서드를 상속 받음"),a("br"),t._v("\ngetArea 메서드는 하나만 생성되어 프로토타입인 Circle.prototype의 메서드로 할당되어 있음"),a("br"),t._v("\n따라 Circle 생성자 함수가 생성하는 모든 인스턴스는 getArea 메서드를 상속받아 사용 가능"),a("br"),t._v("\n(= radius 프로퍼티만 개별적으로 소유하고 내용이 동일한 메서드는 상속을 통해 공유해 사용함)")]),t._v(" "),a("p",[t._v("상속은 코드의 재사용 관점에서 매우 유용"),a("br"),t._v("\n공통적으로 사용할 프로퍼티나 메서드를 프로토타입에 미리 구현해두면 생성자 함수가 생성할 모든 인스턴스는"),a("br"),t._v("\n별도의 구현없이 상위(부모) 객체인 프로토타입의 자산을 공유해 사용 가능함")]),t._v(" "),a("h2",{attrs:{id:"_3-프로토타입-객체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-프로토타입-객체"}},[t._v("#")]),t._v(" 3. 프로토타입 객체")]),t._v(" "),a("ul",[a("li",[t._v("(=프로토타입)")]),t._v(" "),a("li",[t._v("객체 간 상속을 구현하기 위해 사용됨")]),t._v(" "),a("li",[t._v("어떤 객체의 상위 객체 역할을 하는 객체로서 다른 객체에 공유 프로퍼티(메서드 포함)를 제공함")]),t._v(" "),a("li",[t._v("프로토타입을 상속받은 하위 객체는 상위 객체의 프로퍼티를 자신의 프로퍼티처럼 자유롭게 사용 가능")])]),t._v(" "),a("p",[t._v("모든 객체는 [[Prototype]] 내부 슬롯을 가짐"),a("br"),t._v("\n[[Prototype]] 내부 슬롯의 값 = 프로토타입의 참조(null인 경우 있음)"),a("br"),t._v("\n객체 생성 시 객체 생성 방식에 따라 프로토타입이 결정되고 [[Prototype]]에 저장됨"),a("br"),t._v("\nex)"),a("br"),t._v("\n객체 리터럴에 의해 생성된 객체의 프로토타입 = Object.prototype"),a("br"),t._v("\n생성자 함수에 의해 생성된 객체의 프로토타입 = 생성자 함수의 prototype 프로퍼티에 바인딩되어 있는 객체")]),t._v(" "),a("p",[t._v("모든 객체는 하나의 프로토타입을 가지며 모든 프로토타입은 생성자 함수와 연결되어 있음"),a("br"),t._v("\n([[Prototype]] 내부 슬롯의 값이 null인 객체는 프로토타입 없음)")]),t._v(" "),a("p",[t._v("객체 : __proto__접근자 프로퍼티를 통해 프로토타입에 간접적으로 접근 가능"),a("br"),t._v("\n프로토타입 : 자신의 constructor 프로퍼티를 통해 생성자 함수에 접근 가능"),a("br"),t._v("\n생성자 함수 : 자신의 prototype 프로퍼티를 통해 프로토타입에 접근 가능")]),t._v(" "),a("h3",{attrs:{id:"_3-1-proto-접근자-프로퍼티"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-proto-접근자-프로퍼티"}},[t._v("#")]),t._v(" 3-1. __proto__접근자 프로퍼티")]),t._v(" "),a("p",[t._v("모든 객체는 __proto__접근자 프로퍼티를 통해"),a("br"),t._v("\n자신의 프로토타입([[Prototype]] 내부 슬롯)에 간접적으로 접근 가능")]),t._v(" "),a("h4",{attrs:{id:"_3-1-1-proto-는-접근자-프로퍼티다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-proto-는-접근자-프로퍼티다"}},[t._v("#")]),t._v(" 3-1-1. __proto__는 접근자 프로퍼티다.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("내부 슬롯은 프로퍼티가 아니기 때문에 내부 슬롯과 내부 메서드는 직접적으로 접근하거나 호출 불가"),a("br"),t._v("\n단, 일부 내부 슬롯과 내부 메서드에 한해 간접적으로 접근할 수 있는 수단을 제공함"),a("br"),t._v("\n[[Prototype]] 내부 슬롯에도 직접 접근 불가하며, __proto__접근자 프로퍼티를 통해"),a("br"),t._v("\n간접적으로 [[Prototype]] 내부 슬롯의 값(=프로토타입)에 접근 가능")])]),t._v(" "),a("li",[a("p",[t._v("접근자 프로퍼티는 자체적으로 값([[Value]] 프로퍼티 어트리뷰트)을 갖지 않고 다른 데이터 프로퍼티의"),a("br"),t._v("\n값을 읽거나 저장할 때 사용하는 접근자 함수([[Get]], [[Set]]프로퍼티 어트리뷰트)로 구성된 프로퍼티")])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype의 접근자 프로퍼티인 __proto__는 getter/setter 함수라고 부르는 접근자 함수"),a("br"),t._v("\n([[Get]], [[Set]] 프로퍼티 어트리뷰트에 할당된 함수)를 통해 프로토타입을 취득하거나 할당함")]),t._v(" "),a("ul",[a("li",[t._v("__proto__접근자 프로퍼티를 통해 프로토타입에 접근 시 내부적으로"),a("br"),t._v("\n__proto__접근자 프로퍼티의 getter 함수인 [[Get]]이 호출됨")]),t._v(" "),a("li",[t._v("__proto__접근자 프로퍼티를 통해 새로운 프로토타입을 할당 시"),a("br"),t._v("\n__proto__접근자 프로퍼티의 setter 함수인 [[Set]]이 호출됨")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//getter 함수인 get __proto__가 호출되어 obj 객체의 프로토타입을 취득")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//setter 함수인 set __proto__가 호출되어 obj 객체의 프로토타입을 교체")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-1-2-proto-접근자-프로퍼티는-상속을-통해-사용된다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-proto-접근자-프로퍼티는-상속을-통해-사용된다"}},[t._v("#")]),t._v(" 3-1-2. __proto__접근자 프로퍼티는 상속을 통해 사용된다.")]),t._v(" "),a("ul",[a("li",[t._v("__proto__접근자 프로퍼티는 객체가 직접 소유하는 프로퍼티가 아닌 Object.prototype의 프로퍼티")]),t._v(" "),a("li",[t._v("모든 객체는 상속을 통해 Object.prototype.__proto__접근자 프로퍼티를 사용 가능")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//person 객체는 __proto__ 프로퍼티를 소유하지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__proto__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//__proto__프로퍼티는 모든 객체의 프로토타입 객체인 Object.prototype의 접근자 프로퍼티")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__proto__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{get:f, set:f, enumerable:fasle, configurable:true}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//모든 객체는 Object.prototype의 접근자 프로퍼티 __proto__를 상속받아 사용 가능")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("Object.prototype")]),a("br"),t._v("\n모든 객체는 프로토타입 계층 구조인 프로토타입 체인에 묶여 있음"),a("br"),t._v("\n자바스크립트 엔진은 객체의 프로퍼티(메서드 포함)에 접근하려고 할 때 해당 객체에"),a("br"),t._v("\n접근하려는 프로퍼티가 없다면 __proto__접근자 프로퍼티가 가리키는 참조를 따라"),a("br"),t._v("\n자신의 부모 역할을 하는 프로토타입의 프로퍼티를 순차적으로 검색함"),a("br"),t._v(" "),a("br"),t._v("\n프로토타입 체인의 종점(=프로토타입 체인의 최상위 객체는) Object.prototype 이며,"),a("br"),t._v("\n이 객체의 프로퍼티와 메서드는 모든 객체에 상속됨")])]),t._v(" "),a("h4",{attrs:{id:"_3-1-3-proto-접근자-프로퍼티를-통해-프로토타입에-접근하는-이유"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-proto-접근자-프로퍼티를-통해-프로토타입에-접근하는-이유"}},[t._v("#")]),t._v(" 3-1-3. __proto__접근자 프로퍼티를 통해 프로토타입에 접근하는 이유")]),t._v(" "),a("p",[a("strong",[t._v("상호 참조에 의해 프로토타입 체인이 생성되는 것을 방지")]),t._v("하기 위해서")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//child의 프로토타입을 parent로 설정")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//parent의 프로토타입을 child로 설정")]),t._v("\nparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//TypeError")]),t._v("\n")])])]),a("p",[t._v("서로가 자신의 프로토타입이 되는 코드가 정상적으로 처리되면 비정상적인 프로토타입 체인이"),a("br"),t._v("\n만들어지기 때문에 __proto__접근자 프로퍼티는 에러를 발생시킴")]),t._v(" "),a("p",[t._v("프로토타입 체인은 단방향 링크드 리스트로 구현되어야 함"),a("br"),t._v("\n(=프로퍼티 검색 방향이 한방향으로만 흘러가야 함)"),a("br"),t._v("\n서로가 자신의 프로토타입이 되는(=순환 참조하는) 비정상적인 프로토타입 체인이 만들어지면"),a("br"),t._v("\n프로토타입타입 체인 종점이 존재하지 않게 때문에 프로퍼티 검색 시 무한 루프에 빠짐")]),t._v(" "),a("p",[t._v("따라 아무런 체크 없이 무조건적으로 프로토타입을 교체하지 못하도록 __proto__접근자 프로퍼티를 통해"),a("br"),t._v("\n프로토타입에 접근하고 교체하도록 구현되어 있음")]),t._v(" "),a("h4",{attrs:{id:"_3-1-4-proto-접근자-프로퍼티를-코드-내에서-직접-사용하는-것은-권장하지-않는다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-proto-접근자-프로퍼티를-코드-내에서-직접-사용하는-것은-권장하지-않는다"}},[t._v("#")]),t._v(" 3-1-4. __proto__접근자 프로퍼티를 코드 내에서 직접 사용하는 것은 권장하지 않는다.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("__proto__접근자 프로퍼티는 ES5까지 ECMAScript 사양에 포함되지 않은 비표준."),a("br"),t._v("\n브라우저 호환성을 고려해 ES6에서 표준으로 채택함 (현재 대부분-IE11이상-의 브라우저에서 지원함)")])]),t._v(" "),a("li",[a("p",[t._v("모든 객체가 __proto__접근자 프로퍼티를 사용할 수 있는 것은 아니기 때문에"),a("br"),t._v("\n코드 내에서 __proto__접근자 프로퍼티를 직접 사용하는 것은 권장하지 않음"),a("br"),t._v("\n(직접 상속을 통해 Object.prototype을 상속받지 않는 객체를 생성할 수도 있기 때문에"),a("br"),t._v("\n__proto__접근자 프로퍼티를 사용할 수 없는 경우 있음)")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj는 프로토타입 체인의 종점. 따라 Object.__proto__를 상속 받을 수 없음")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj는 Object.__proto__를 상속받을 수 없음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//따라 __proto__보다 Object.getPrototypeOf 메서드를 사용하는 편이 좋음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//null")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("따라 프로토타입의 참조를 취득하고 싶은 경우 Object.getPrototypeOf 메서드를 사용하고,"),a("br"),t._v("\n프로토타입을 교체하고 싶은 경우 Object.setPrototypeOf 메서드 사용을 권장")]),t._v(" "),a("p",[t._v("두 메서드는 "),a("code",[t._v("get Object.prototype.__proto__")]),t._v(","),a("br"),t._v(" "),a("code",[t._v("set Object.prototype.__proto")]),t._v("의 처리 내용과 정확히 일치함")]),t._v(" "),a("ul",[a("li",[t._v("Object.getPrototypeOf : ES5에서 도입, IE9 이상에서 지원")]),t._v(" "),a("li",[t._v("Object.setPrototypeOf : ES6에서 도입, IE11 이상에서 지원")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj 객체의 프로토타입을 취득")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj.__prototo__;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj 객체의 프로토타입을 교체")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj.__proto__ = parent;")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-함수-객체의-prototype-프로퍼티"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-함수-객체의-prototype-프로퍼티"}},[t._v("#")]),t._v(" 3-2. 함수 객체의 prototype 프로퍼티")]),t._v(" "),a("ul",[a("li",[t._v("함수 객체만이 소유")]),t._v(" "),a("li",[t._v("생성자 함수가 생성할 인스턴스의 프로토타입을 가리킴")]),t._v(" "),a("li",[t._v("생성자 함수로 호출할 수 없는 함수(non-constructor : 화살표 함수, ES6 메서드 축약 표현으로 정의한 메서드)는"),a("br"),t._v("\nprototype 프로퍼티를 소유하지 않으며 프로토타입도 생성하지 않음")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 객체는 prototype 프로퍼티를 소유함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prototype'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//일반 객체는 prototype 프로퍼티를 소유하지 않음")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prototype'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//화살표 함수는 non-constructopr")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ES6의 메서드 축약 표현으로 정의한 메서드는 non-constructopr")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//non-constructopr는 prototype 프로퍼티를 소유하지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prototype'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prototype'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//non-constructopr는 프로토타입을 생성하지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("p",[t._v("생성자 함수로 호출하기 위해 정의하지 않은 일반 함수(함수 선언문, 함수 표현식)도 prototype 프로퍼티를"),a("br"),t._v("\n소유하지만 객체를 생성하지 않는 일반 함수의 prototype 프로퍼티는 아무런 의미가 없음")]),t._v(" "),a("p",[t._v("모든 객체가 가지고 있는 (Object.prototype으로부터 상속받은) __proto__접근자 프로퍼티와"),a("br"),t._v("\n함수 객체만이 가지고 있는 prototype 프로퍼티는 결국 동일한 프로토타입을 가리킴"),a("br"),t._v("\n하지만 이들 프로퍼티를 사용하는 주체가 다름")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("구분")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("소유")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("값")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("사용 주체")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("사용 목적")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("_"),a("em",[t._v("proto_")]),a("br"),t._v("접근자 프로퍼티")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("모든 객체")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("프로토타입의"),a("br"),t._v("참조")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("모든"),a("br"),t._v("객체")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("객체가 자신의 프로토타입에"),a("br"),t._v("접근 또는 교체하기 위해 사용")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("prototype"),a("br"),t._v("프로퍼티")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("constructor")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("프로토타입의"),a("br"),t._v("참조")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("생성자"),a("br"),t._v("함수")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("생성자 함수가 자신이 생성할 객체"),a("br"),t._v("(인스턴스)의 프로토타입을 할당하기"),a("br"),t._v("위해 사용")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//결국 Person.prototype과 me.__proto__는 동일한 프로토타입을 가리킴")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-3-프로토타입의-constructor-프로퍼티와-생성자-함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-프로토타입의-constructor-프로퍼티와-생성자-함수"}},[t._v("#")]),t._v(" 3-3. 프로토타입의 constructor 프로퍼티와 생성자 함수")]),t._v(" "),a("p",[t._v("모든 프로토타입은 constructor 프로퍼티를 가짐"),a("br"),t._v("\nconstructor 프로퍼티는 prototype 프로퍼티로 자신을 참조하고 있는 생성자 함수를 가리킴"),a("br"),t._v("\n이 연결은 생성자 함수가 생성될 때(즉, 함수 객체가 생성될 때) 이뤄짐")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//me 객체의 생성자 함수는 Person")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("Person 생성자 함수로 생성된 me 객체는 프로토타입의 constructor 프로퍼티를 통해 생성자 함수와 연결됨")]),t._v(" "),a("p",[t._v("me 객체에는 constructor 프로퍼티가 없지만 me 객체의 프로토타입인 Person.prototype에는 있음."),a("br"),t._v("\n따라 me 객체는 프로토타입인 Person.prototype의 constructor프로퍼티를 상속받아 사용 가능")]),t._v(" "),a("h2",{attrs:{id:"_4-리터럴-표기법에-의해-생성된-객체의-생성자-함수와-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-리터럴-표기법에-의해-생성된-객체의-생성자-함수와-프로토타입"}},[t._v("#")]),t._v(" 4. 리터럴 표기법에 의해 생성된 객체의 생성자 함수와 프로토타입")]),t._v(" "),a("p",[t._v("생성자 함수에 의해 생성된 인스턴스는 프로토타입의 constructor 프로퍼티에 의해 생성자 함수와 연결됨"),a("br"),t._v("\n이때 constructor 프로퍼티가 가리키는 생성자 함수는 인스턴스를 생성한 생성자 함수")]),t._v(" "),a("p",[t._v("하지만 리터럴 표기법에 의한 객체 생성 방식과 같이 명시적으로"),a("br"),t._v("\nnew 연산자와 함께 생성자 함수를 호출해 인스턴스를 생성하지 않는 객체 생성 방식도 있음")]),t._v(" "),a("p",[t._v("리터럴 표기법에 의해 생성된 객체도 물론 프로토타입 존재함"),a("br"),t._v("\n하지만 해당 객체의 경우 프로토타입의 constructor 프로퍼티가 가리키는 생성자 함수가"),a("br"),t._v("\n반드시 객체를 생성한 생성자 함수라고 단정할 수는 없음")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//객체 리터럴")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 리터럴")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//배열 리터럴")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//정규 표현식 리터럴")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("ig")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj 객체는 Object 생성자 함수로 생성한 객체가 아니라 객체 리터럴로 생성했지만 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//하지만 obj 객체의 생성자 함수는 Object 생성자 함수")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("obj 객체는 Object 생성자 함수로 생성한 객체가 아니라 객체 리터럴에 의해 생성된 객체지만"),a("br"),t._v("\nObject 생성자 함수와 constructor 프로퍼티로 연결되어 있음"),a("br"),t._v("\n그렇다면 객체 리터럴에 의해 생성된 객체는 사실 Object 생성자 함수로 생성되는 것은 아닐까?")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("ECMAScript 사양을 살펴보면"),a("br"),t._v("\nObject 생성자 함수에 인수를 전달하지 않거나 undefined 또는 null을 인수로 전달하면서 호출 시 내부적으로는"),a("br"),t._v("\n추상 연산 OrdinaryObjectCreate를 호출해 Object.prototype을 프로토타입으로 갖는 빈 객체를 생성함")]),t._v(" "),a("blockquote",[a("p",[t._v("추상 연산 : ECMAScript 사양에서 내부 동작의 구현 알고리즘을 표현한 것"),a("br"),t._v("\nECMAScript 사양에서 설명을 위해 사용되는 함수와 유사한 의사 코드라고 이해하면 됨")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. Object 생성자 함수에 의한 객체 생성")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//인수가 전달되지 않았을 때 추상 연산 OrdinaryObjectCreate를 호출해 빈 객체를 생성함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. new.target이 undefined나 Object가 아닌 경우")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//인스턴스 -> Foo.prototype -> Object.prototype 순으로 프로토타입 체인이 생성됨")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Foo{}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 인수가 전달된 경우에는 인수를 객체로 변환함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Nubmer 객체 생성")]),t._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Number {123}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String 객체 생성")]),t._v("\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//String {'123'}")]),t._v("\n")])])]),a("p",[t._v("객체 리터럴이 평가될 떄는 추상 연산 OrdinaryObjectCreate를 호출해"),a("br"),t._v("\n빈 객체를 생성하고 프로퍼티를 추가하도록 정의되어 있음")]),t._v(" "),a("p",[t._v("이처럼 Object 생성자 함수 호출과 객체 리터럴의 평가는 추상 연산 OrdinaryObjectCreate를 호출해"),a("br"),t._v("\n빈 객체를 생성하는 점에서 동일하나 세부 내용(new.target의 확인, 프로퍼티 추가하는 처리 등)은 다름"),a("br"),t._v("\n따라 객체 리터럴에 의해 생성된 객체는 Object 생성자 함수가 생성한 객체가 이님")]),t._v(" "),a("p",[t._v("함수 객체의 경우 차이가 더 명확함"),a("br"),t._v("\nFunction 생성자 함수를 호출해 생성한 함수는 렉시컬 스코프를 만들지 않고"),a("br"),t._v("\n전역 함수인 것처럼 스코프를 생성하며 클로저도 만들지 않음."),a("br"),t._v("\n따라 함수 선언문과 함수 표현식을 평가해 함수 객체를 생성한 것은 Function 생성자 함수가 아님"),a("br"),t._v("\n하지만 constructor 프로퍼티를 통해 확인해보면 foo 함수의 생성자 함수는 Function 생성자 함수로 나옴")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//foo 함수는 Function 생성자 함수로 생성한 함수 객체가 아니라 함수 선언문으로 생성함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//하지만 constructor 프로퍼티를 통해 확인해보면 함수 foo의 생성자 함수는 Function 생성자 함수.")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("리터럴 표기법에 의해 생성된 객체도 상속을 위해 프로토타입이 필요함"),a("br"),t._v("\n따라 리터럴 표기법에 의해 생성된 객체도 가상적인 생성자 함수를 가짐"),a("br"),t._v(" "),a("strong",[t._v("프로토타입과 생성자 함수는 단독으로 존재할 수 없고 언제나 쌍으로 존재하기 떄문")]),a("br"),t._v("\n(프로토타입은 생성자 함수와 더불어 생성되며 prototype.constructor 프로퍼티에 의해 연결되어있음)")]),t._v(" "),a("p",[t._v("리터럴 표기법에 의해 생성된 객체는 생성자 함수에 의해 생성된 객체는 아니지만"),a("br"),t._v("\n큰 틀에서 생각해보면 리터럴 표기법으로 생성한 객체도 생성자 함수로 생성한 객체와 본질적으로 큰 차이는 없음"),a("br"),t._v("\n생성 과정이나 스코프, 클로저 등의 미묘한 차이는 있지만 결국 동일한 특성을 가짐"),a("br"),t._v("\n따라 프로토타입의 constructor 프로퍼티를 통해 연결되있는 생성자 함수를"),a("br"),t._v('\n"리터럴 표기법으로 생성한 객체를 생성한" 생성자 함수로 생각해도 크게 무리는 없음')]),t._v(" "),a("p",[t._v("리터럴 표기법에 의해 생성된 객체의 생성자 함수와 프로토타입")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("리터럴 표기법")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("생성자 함수")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("프로토타입")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("객체 리터럴")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Object")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Object.prototype")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("함수 리터럴")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Function")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Function.prototype")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("배열 리터럴")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Array")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Array.prototype")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("정규 표현식 리터럴")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("RegExp")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("RegExp.prototype")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-프로토타입의-생성-시점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-프로토타입의-생성-시점"}},[t._v("#")]),t._v(" 5. 프로토타입의 생성 시점")]),t._v(" "),a("p",[t._v("객체는 리터럴 표기법 또는 생성자 함수에 의해 생성되므로 "),a("strong",[t._v("결국 모든 객체는 생성자 함수와 연결")]),t._v("되어 있음"),a("br"),t._v("\nObject.create 메서드와 Class로 객체를 생성하는 방법도 있는데"),a("br"),t._v("\n해당 방법으로 생성한 객체도 생성자 함수와 연결되어 있음")]),t._v(" "),a("p",[a("strong",[t._v("프로토타입은 생성자 함수가 생성되는 시점에 더불어 생성됨")]),a("br"),t._v("\n프로토타입과 생성자 함수는 단독으로 존재할 수 없고 언제나 쌍으로 존재하기 때문")]),t._v(" "),a("p",[t._v("생성자 함수는 사용자 정의 생성자 함수와 빌트인 생성자 함수로 구분할 수 있음"),a("br"),t._v("\n둘로 구분해 프로토타입 생성 시점을 알아보자")]),t._v(" "),a("h3",{attrs:{id:"_5-1-사용자-정의-생성자-함수와-프로토타입-생성-시점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-사용자-정의-생성자-함수와-프로토타입-생성-시점"}},[t._v("#")]),t._v(" 5-1. 사용자 정의 생성자 함수와 프로토타입 생성 시점")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("생성자 함수로서 호출할 수 있는 함수(=constructor)는 함수 정의가 평가되어"),a("br"),t._v("\n함수 객체를 생성하는 시점에 프로토타입도 더불어 생성됨")])]),t._v(" "),a("li",[t._v("생성자 함수로 호출 불가능한 함수(=non-constructor)는 프로토타입이 생성되지 않음")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 정의(constructor)가 평가되어 함수 객체 생성하는 시점에 프로토타입도 더불어 생성됨")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{constructor: f}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//non-constructor 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Person2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//non-constructor 함수는 프로토타입이 생성되지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("p",[t._v("함수 선언문은 런타임 이전에 자바스크립트 엔진에 의해 먼저 실행되기 때문에"),a("br"),t._v("\nPerson 생성자 함수는 어떤 코드보다 먼저 평가되어 함수 객체가 되며 이때 프로토타입도 더불어 생성됨")]),t._v(" "),a("p",[t._v("생성된 프로토타입은 오직 constructor 프로퍼티만 가지며"),a("br"),t._v("\n생성자 함수의 prototype 프로퍼티에 바인딩 됨")]),t._v(" "),a("p",[t._v("프로토타입도 객체이고 모든 객체는 프로토타입을 가지므로 프로토타입도 자신의 프로토타입을 갖음"),a("br"),t._v("\n생성된 프로토타입의 프로토타입은 언제나 Object.prototype")]),t._v(" "),a("h3",{attrs:{id:"_5-2-빌트인-생성자-함수와-프로토타입-생성-시점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-빌트인-생성자-함수와-프로토타입-생성-시점"}},[t._v("#")]),t._v(" 5-2. 빌트인 생성자 함수와 프로토타입 생성 시점")]),t._v(" "),a("p",[t._v("Object, String, Function, Array 등 빌트인 생성자 함수도 일반 함수와 마찬가지로"),a("br"),t._v("\n빌트인 생성자 함수가 생성되는 시점에 프로토타입이 생성됨")]),t._v(" "),a("p",[t._v("모든 빌트인 생성자 함수는 전역 객체가 생성되는 시점에 생성됨"),a("br"),t._v("\n생성된 프로토타입은 빌트인 생성자 함수의 prototype 프로퍼티에 바인딩됨")]),t._v(" "),a("p",[t._v("이처럼 객체가 생성되기 이전 생성자 함수와 프로토타입은 이미 객체화되어 존재함"),a("br"),t._v(" "),a("strong",[t._v("이후 생성자 함수 또는 리터럴 표기법으로 객체를 생성하면 프로토타입은"),a("br"),t._v("\n생성된 객체의 [[Prototype]] 내부 슬롯에 할당됨")]),a("br"),t._v("\n이로써 생성한 생성된 객체는 프로토타입을 상속받음")]),t._v(" "),a("h4",{attrs:{id:"전역-객체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#전역-객체"}},[t._v("#")]),t._v(" <전역 객체>")]),t._v(" "),a("p",[t._v("전역 객체는 코드가 실행되기 이전 단계에 자바스크립트 엔진에 의해 생성되는 특수 객체"),a("br"),t._v("\n전역 객체는 클라이언트 사이드 환경에서는 window, 서버 사이드 환경에서는 global 객체를 의미함")]),t._v(" "),a("p",[t._v("전역 객체는 표준 빌트인 객체들(Object, String 등)과 환경에 따른 호스트 객체"),a("br"),t._v("\n(클라이언트 Web API, Node.js의 호스트 API), var 키워드로 선언한 전역 변수와"),a("br"),t._v("\n전역 함수를 프로퍼티로 가짐"),a("br"),t._v("\nMath, Reflect, JSON을 제외한 표준 빌트인 객체는 모두 생성자 함수")]),t._v(" "),a("p",[t._v("표준 빌트인 객체인 Object도 전역 객체의 프로퍼티며 전역 객체가 생성되는 시점에 생성됨")]),t._v(" "),a("h2",{attrs:{id:"_6-객체-생성-방식과-프로토타입의-결정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-객체-생성-방식과-프로토타입의-결정"}},[t._v("#")]),t._v(" 6. 객체 생성 방식과 프로토타입의 결정")]),t._v(" "),a("p",[t._v("객체는 다양한 생성 방법이 있음")]),t._v(" "),a("ul",[a("li",[t._v("객체 리터럴")]),t._v(" "),a("li",[t._v("Object 생성자 함수")]),t._v(" "),a("li",[t._v("생성자 함수")]),t._v(" "),a("li",[t._v("Object.create 메서드")]),t._v(" "),a("li",[t._v("클래스(ES6)")])]),t._v(" "),a("p",[t._v("다양한 방식으로 생성된 모든 객체는 세부적인 객체 생성 방식의 차이는 있으나"),a("br"),t._v("\n추상 연산 OrdinaryObjectCreate 에 의해 생성된다는 공통점 있음")]),t._v(" "),a("h4",{attrs:{id:"추상-연산-ordinaryobjectcreate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#추상-연산-ordinaryobjectcreate"}},[t._v("#")]),t._v(" 추상 연산 OrdinaryObjectCreate")]),t._v(" "),a("ul",[a("li",[t._v("필수적으로 자신이 생성할 객체의 프로토타입을 인수로 전달받음")]),t._v(" "),a("li",[t._v("자신이 생성할 객체에 추가할 프로퍼티 목록을 옵션으로 전달할 수 있음")]),t._v(" "),a("li",[t._v("빈 객체 생성 ->"),a("br"),t._v("\n객체에 추가할 프로퍼티 목록이 인수로 전달된 경우 프로퍼티를 객체에 추가 ->"),a("br"),t._v("\n인수로 전달받은 프로토타입을 자신이 생성한 객체의 [[Prototype]] 내부 슬롯에 할당 ->"),a("br"),t._v("\n생성한 객체를 반환")])]),t._v(" "),a("p",[t._v("즉, 프로토타입은 추상 연산 OrdinaryObjectCreate에 전달되는 인수에 의해 결정됨"),a("br"),t._v("\n이 인수는 객체가 생성되는 시점에 객체 생성 방식에 의해 결정됨")]),t._v(" "),a("h3",{attrs:{id:"_6-1-객체-리터럴에-의해-생성된-객체의-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-객체-리터럴에-의해-생성된-객체의-프로토타입"}},[t._v("#")]),t._v(" 6-1. 객체 리터럴에 의해 생성된 객체의 프로토타입")]),t._v(" "),a("p",[t._v("산객체 리터럴에 의해 생성되는 객체의 프로토타입은 Object.prototype")]),t._v(" "),a("h3",{attrs:{id:"_6-2-object-생성자-함수에-의해-생성된-객체의-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-object-생성자-함수에-의해-생성된-객체의-프로토타입"}},[t._v("#")]),t._v(" 6-2. Object 생성자 함수에 의해 생성된 객체의 프로토타입")]),t._v(" "),a("p",[t._v("Object 생성자 함수에 의해 생성되는 객체의 프로토타입은 Object.prototype")]),t._v(" "),a("p",[t._v("객체 리터럴과 Object 생성자 함수에 의한 객체 생성 방식의 차이는 프로퍼티를 추가하는 방식에 있음"),a("br"),t._v("\n객체 리터럴 방식은 객체 리터럴 내부에 프로퍼티를 추가하지만"),a("br"),t._v("\nObject 생성자 함수 방식은 일단 빈 객체를 생성한 이후 프로퍼티를 추가해야 함")]),t._v(" "),a("h3",{attrs:{id:"_6-3-생성자-함수에-의해-생성된-객체의-프로토타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-생성자-함수에-의해-생성된-객체의-프로토타입"}},[t._v("#")]),t._v(" 6-3. 생성자 함수에 의해 생성된 객체의 프로토타입")]),t._v(" "),a("p",[t._v("생성자 함수에 의해 생성되는 객체의 프로토타입은 생성자 함수의 prototype 프로퍼티에 바인딩되어 있는 객체")]),t._v(" "),a("p",[t._v("표준 빌트인 객체인 Object 생성자 함수와 더불어 생성된 프로토타입 Object.prototype은"),a("br"),t._v("\n다양한 빌트인 메서드(hasOwnProperty 등)을 가지고 있음."),a("br"),t._v("\n하지만 사용자 정의 함수와 더불어 생성된 프로토타입의 프로퍼티는 constructor 뿐")]),t._v(" "),a("p",[t._v("프로토타입은 객체이므로 일반 객체와 같이 프로토타입에도 프로퍼티를 추가/삭제할 수 있음"),a("br"),t._v("\n그리고 이렇게 추가/삭제된 프로퍼티는 프로토타입 체인에 즉각 반영됨")]),t._v(" "),a("h2",{attrs:{id:"_7-프로토타입-체인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-프로토타입-체인"}},[t._v("#")]),t._v(" 7. 프로토타입 체인")]),t._v(" "),a("p",[t._v("자바스크립트는 객체의 프로퍼티(메서드 포함)에 접근하려고 할 때 해당 객체에 접근하려는 프로퍼티가 없다면"),a("br"),t._v("\n[[Prototype]] 내부 슬롯의 참조를 따라 자신의 부모 역할을 하는 프로토타입의 프로퍼티를 순차적으로 검색함"),a("br"),t._v("\n=> 이를 프로토타입 체인이라고 함"),a("br"),t._v("\n프로토타입 체인은 자바스크립트가 객체지향 프로그래밍의 상속을 구현하는 메커니즘")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입 메서드")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hi! My name is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hasOwnProperty는 Object.prototype의 메서드")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//me 객체는 프로토타입 체인을 따라 hasOwnProperty 메서드를 검색해 사용함")]),t._v("\nme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("위의 코드 실행 시 자바스크립트 엔진은 다음과 같은 과정을 거쳐 메서드를 검색함 (프로퍼티 참조 경우도 마찬가지)")]),t._v(" "),a("ol",[a("li",[t._v("먼저 hasOwnProperty 메서드를 호출한 me 객체에서 hasOwnProperty 메서드를 검색."),a("br"),t._v("\nme 객체에는 없으므로 프로토타입 체인을 따라 ([[Prototype]] 내부 슬롯에 바인딩되어 있는 프로토타입)"),a("br"),t._v("\n이동해 hasOwnProperty 메서드를 검색함")]),t._v(" "),a("li",[t._v("Person.prototype에도 해당 메서드가 없으므로 프로토타입 체인을 따라 이동해 다시 검색함")]),t._v(" "),a("li",[t._v("Object.prototype에는 해당 메서드가 존재함."),a("br"),t._v("\n자바스크립트 엔진은 Object.prototype.hasOwnProperty 메서드를 호출함"),a("br"),t._v("\n이때 Object.prototype.hasOwnProperty 메서드의 this에는 me객체가 바인딩됨"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//call 메서드 : this로 사용할 객체를 전달하면서 함수를 호출함  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])])])]),t._v(" "),a("h4",{attrs:{id:"object-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype"}},[t._v("#")]),t._v(" Object.prototype")]),t._v(" "),a("ul",[a("li",[t._v("프로토타입 체인의 최상위에 위치하는 객체 (=프로토타입 체인의 종점)")]),t._v(" "),a("li",[t._v("모든 객체는 Object.prototype을 상속받음")]),t._v(" "),a("li",[t._v("Object.prototype의 프로토타입 (=[[Prototype]] 내부 슬롯의 값)은 null")]),t._v(" "),a("li",[t._v("Object.prototype에서도 프로퍼티를 검색할 수 없는 경우 undefined를 반환함 (에러 발생 X)")])]),t._v(" "),a("p",[t._v("이처럼 자바스크립트 엔진은 프로토타입 체인을 따라 프로퍼티/메서드를 검색함"),a("br"),t._v("\n따라 프로토타입 체인은 상속과 프로퍼티 검색을 위한 메커니즘이라고 할 수 있음"),a("br"),t._v("\n이에 반해, 프로퍼티가 아닌 식별자는 스코프체인에서 검색함"),a("br"),t._v("\n따라 스코프체인은 식별자 검색을 위한 메커니즘이라고 할 수 있음")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("위 예제의 경우 먼저 스코프 체인에서 me 식별자를 검색 ->"),a("br"),t._v("\nme 식별자는 전역에서 선언되었으므로 전역 스코프에서 검색됨 ->"),a("br"),t._v("\nme 식별자 검색 후 me 객체의 프로토타입 체인에서 hasOwnProperty 메서드를 검색함")]),t._v(" "),a("p",[t._v("이처럼 스코프 체인과 프로토타입 체인은 서로 연관없이 별도로 동작하는게 아니라"),a("br"),t._v("\n서로 협력해 식별자와 프로퍼티를 검색하는데 사용됨")]),t._v(" "),a("h2",{attrs:{id:"_8-오버라이딩과-프로퍼티-섀도잉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-오버라이딩과-프로퍼티-섀도잉"}},[t._v("#")]),t._v(" 8. 오버라이딩과 프로퍼티 섀도잉")]),t._v(" "),a("ul",[a("li",[t._v("프로토타입 프로퍼티 : 프로토타입이 소유한 프로퍼티")]),t._v(" "),a("li",[t._v("인스턴스 프로퍼티 : 인스턴스가 소유한 프로퍼티")])]),t._v(" "),a("p",[t._v("프로토타입 프로퍼티와 같은 명의 프로퍼티를 인스턴스에 추가 시 프로토타입 체인을 따라"),a("br"),t._v("\n프로토타입 프로퍼티를 검색해 덮어쓰는게 아니라 인스턴스 프로퍼티로 추가함"),a("br"),t._v("\n이떄 인스턴스 메서드는 프로토타입 메서드를 오버라이딩했고 프로토타입 메서드는 가려짐"),a("br"),t._v("\n이처럼 상속 관게에 의해 프로퍼티가 가려지는 현상을 프로퍼티 섀도잉이라고 함")]),t._v(" "),a("ul",[a("li",[t._v("오버라이딩 : 상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해 사용하는 방식")]),t._v(" "),a("li",[t._v("오버로딩 : 함수의 이름은 동일하지만 매개변수의 타입 또는 개수가 다른 메서드를 구현하고"),a("br"),t._v("\n매개변수에 의해 메서드를 구별해 호출하는 방식. 자바스크립트는 오버로딩을 지원하지 않지만"),a("br"),t._v("\narguments 객체를 사용해 구현 가능함")])]),t._v(" "),a("p",[t._v("프로퍼티 삭제 경우도 마찬가지"),a("br"),t._v("\n프로토타입 메서드가 아닌 인스턴스 메서드가 삭제됨")]),t._v(" "),a("p",[t._v("이처럼 하위 객체를 통해 프로토타입의 프로퍼티를 변경, 삭제하는 것은 불가능"),a("br"),t._v("\n하위 객체를 통해 프로토타입의 get 액세스는 허용되지만 set 액세스는 허용되지 않음")]),t._v(" "),a("p",[t._v("프로토타입 프로퍼티를 변경, 삭제하려면 프로토타입에 직접 접근해야 함")]),t._v(" "),a("h2",{attrs:{id:"_9-프로토타입의-교체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-프로토타입의-교체"}},[t._v("#")]),t._v(" 9. 프로토타입의 교체")]),t._v(" "),a("p",[t._v("프로토타입은 임의의 다른 객체로 변경 가능함"),a("br"),t._v("\n즉, 부모 객체인 프로토타입을 동적으로 변경가능하다는 걸 의미"),a("br"),t._v("\n이런 특징을 활용해 객체 간의 상속 관계를 동적으로 변경하 룻 있음"),a("br"),t._v("\n프로토타입은 생성자 함수 또는 인스턴스에 의해 교체 가능함")]),t._v(" "),a("p",[t._v("프로토타입 교체를 통해 객체 간의 상속 관계를 동적으로 변경하는 것은 많이 번거로움"),a("br"),t._v("\n따라 프로토타입은 직접 교체하지 않는게 좋음"),a("br"),t._v("\n상속 관계를 인위적으로 설정하려면 직접 상속이 더 편리하고 안전함"),a("br"),t._v("\n또한 ES6에서 도입된 클래스 사용 시 간편하고 직관적으로 상속 관계 구현 가능함")]),t._v(" "),a("h3",{attrs:{id:"_9-1-생성자-함수에-의한-프로토타입의-교체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-생성자-함수에-의한-프로토타입의-교체"}},[t._v("#")]),t._v(" 9-1. 생성자 함수에 의한 프로토타입의 교체")]),t._v(" "),a("p",[t._v("프로토타입 교체 시 constructor 프로퍼티와 생성자 함수 간의 연결이 파고됨"),a("br"),t._v("\n프로토타입으로 교체한 객체 리터럴에 constructor 프로퍼티를 추가해"),a("br"),t._v("\n프로토타입의 constructor 프로퍼티를 되살림")]),t._v(" "),a("h3",{attrs:{id:"_9-2-인스턴스에-의한-프로토타입의-교체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-인스턴스에-의한-프로토타입의-교체"}},[t._v("#")]),t._v(" 9-2. 인스턴스에 의한 프로토타입의 교체")]),t._v(" "),a("p",[t._v("프로토타입은 생성자 함수의 prototype 프로퍼티 뿐 아니라"),a("br"),t._v("\n인스턴스의 __proto__접근자 프로퍼티를 통해서도 접근 가능함"),a("br"),t._v("\n따라 프로토타입 교체도 가능함")]),t._v(" "),a("p",[t._v("생성자 함수의 prototype 프로퍼티에 다른 임의의 객체를 바인딩하는 것은"),a("br"),t._v("\n미래에 생성한 인스턴스의 프로토타입을 교체하는 것"),a("br"),t._v("\n__proto__접근자 프로퍼티르 통해 프로토타입을 교체하는 것은"),a("br"),t._v("\n이미 생성된 객체의 프로토타이븡ㄹ 교체하는 것임")]),t._v(" "),a("p",[t._v("생성자 함수에 의한 프로토타입 교체와 인스턴스에 의한 프로토타입 교체는"),a("br"),t._v("\n별다른 차이가 없어보이지만 미묘한 차이가 있음")]),t._v(" "),a("ul",[a("li",[t._v("생성자 함수에 의한 프로토타입 교체 :"),a("br"),t._v("\n생성자 함수의 프로퍼티가 교체된 프로토타입을 가리킴")]),t._v(" "),a("li",[t._v("인스턴스에 의한 프로토타입 교체 :"),a("br"),t._v("\n생성자 함수의 prototype 프로퍼티가 교체된 프로토타입을 가리키지 않음")])]),t._v(" "),a("h2",{attrs:{id:"_10-instanceof-연산자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-instanceof-연산자"}},[t._v("#")]),t._v(" 10. instanceof 연산자")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("객체 instanceof 생성자함수")])]),t._v(" "),a("li",[t._v("좌변 : 객체를 가리키는 식별자, 우변 : 생성자 함수를 가리키는 식별자를 피연산자로 받음")]),t._v(" "),a("li",[t._v("우변의 피연산자가 함수가 아닌 경우 TypeError 발생")]),t._v(" "),a("li",[t._v("우변 생성자 함수의 prototype에 바인딩된 객체가 좌변 객체의"),a("br"),t._v("\n프로토타입 체인 상에 존재하면 ture, 그렇지 않은 경우 false로 평가됨")]),t._v(" "),a("li",[t._v("프로토타입의 constructor 프로퍼티가 가리키는 생성자 함수를 찾는게 아니라"),a("br"),t._v("\n생성자 함수의 prototype에 바인딩 된 객체가 프로토타입 체인 상에 존재하는지 확인함")]),t._v(" "),a("li",[t._v("me instanceof Person :"),a("br"),t._v("\nme 객체의 프로토타입 체인 상에 Person.prototype에 바인딩된 객체가 존재하는지 확인")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype이 me 객체의 프로토타입 체인 상에 존재하므로 true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.prototype이 me 객체의 프로토타입 체인 상에 존재하므로 true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입으로 교체할 객체")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입의 교체")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person 생성자 함수와 parent 객체는 연결되어 있지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype이 me 객체의 프로토타입 체인 상에 존재하지 않으므로 false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.prototype이 me 객체의 프로토타입 체인 상에 존재하므로 true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//parent 객체를 Person 생성자 함수의 prototype 프로퍼티에 바인딩")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype이 me 객체의 프로토타입 체인 상에 존재하므로 true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.prototype이 me 객체의 프로토타입 체인 상에 존재하므로 true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("p",[t._v("instanceof 연산자를 함수로 표현")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입 취득")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//재귀 탈출 조건")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//prototype이 null이면 프로토타입 체인의 종점에 다다른 것")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//프로토타입이 생성자 함수의 prototype 프로퍼티에 바인딩된 객체라면 true 반환")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//그렇지 않다면 재귀 호출로 프로토타입 체인 상의 상위 프로토타입으로 이동하여 확인함")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstanceof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("p",[t._v("따라 생성자 함수에 의해 프로토타입이 교체되어 constructor 프로퍼티와 생성자 함수 간의"),a("br"),t._v("\n연결이 파괴되어도 생성자 함수의 prototype 프로퍼티와 프로토타입 간의 연결은 파괴되지 않으므로"),a("br"),t._v("\ninstanceof는 아무런 영향을 받지 않음")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//생성자 함수의 prototype 프로퍼티를 통해 프로토타입 교체")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hi! My name is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//constructor 프로퍼티와 생성자 함수 간의 연결이 파괴되도 instanceof는 아무런 영향을 받지 않음")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person.prototype이 me 객체의 프로토타입 체인 상에 존재함")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.prototype이 me 객체의 프로토타입 체인 상에 존재함")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("me "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h2",{attrs:{id:"_11-직접-상속"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-직접-상속"}},[t._v("#")]),t._v(" 11. 직접 상속")]),t._v(" "),a("h3",{attrs:{id:"_11-1-object-create에-의한-직접-상속"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-object-create에-의한-직접-상속"}},[t._v("#")]),t._v(" 11-1. Object.create에 의한 직접 상속")]),t._v(" "),a("h4",{attrs:{id:"object-create-메서드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-create-메서드"}},[t._v("#")]),t._v(" <Object.create 메서드>")]),t._v(" "),a("ul",[a("li",[t._v("명시적으로 프로토타입을 지정해 새로운 객체를 생성함")]),t._v(" "),a("li",[t._v("다른 객체 생성 방식과 마찬가지로 추상 연산 OrdinaryObjectCreate를 호출함")]),t._v(" "),a("li",[t._v("첫 번째 매개변수에는 생성할 객체의 프로토타입으로 지정할 객체 전달."),a("br"),t._v("\n두 번째 매개변수에는 생성할 객체의 프로퍼티 키와 프로퍼티 디스크립터 객체로 이뤄진 객체 전달"),a("br"),t._v("\n(Object.defineProperties 메서드의 두 번째 인수와 동일. 옵션이라 생략 가능함)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 지정된 프로토타입 및 프로퍼티를 갖는 새로운 객체를 생성해 반환함\n * @param {object} prototype - 생성할 객체의 프로토타입으로 지정할 객체\n * @param {object} [propertiesObject] - 생성할 객체의 프로퍼티를 갖는 객체\n * @returns {object} 지정된 프로토타입 및 프로퍼티를 갖는 새로운 객체\n * **/")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propertiesObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Object.create 메서드는 첫 번째 매개변수에 전달한 객체의 프로토타입 체인에 속하는 객체를 생성함"),a("br"),t._v("\n즉, 객체를 생성하면서 직접적으로 상속을 구현하는 것."),a("br"),t._v("\n이 메서드의 장점은 아래와 같음")]),t._v(" "),a("ul",[a("li",[t._v("new 연산자 없이도 객체 생성 가능")]),t._v(" "),a("li",[t._v("프로토타입을 지정하면서 객체 생성 가능")]),t._v(" "),a("li",[t._v("객체 리터럴에 의해 생성된 객체도 상속받을 수 있음")])]),t._v(" "),a("p",[t._v("참고로 Object.prototype의 빌트인 메서드인 Object.prototype.hasOwnProperty 등은"),a("br"),t._v("\n모든 객체의 프로토타입 체인의 종점, 즉 Object.prototype의 메서드이므로 모든 객체가 상속받아 호출 가능함")]),t._v(" "),a("p",[a("code",[t._v("console.log(obj.hasOwnProperty('a))")]),a("br"),t._v("\n근데 ESLint에서는 위와 같이 Object.prototype의 빌트인 메서드를 객체가 직접 호출하는 것을 권장하지 않음"),a("br"),t._v("\nObject.create 메서들르 통해 프로토타입 체인의 종점에 위치하는 객체를 생성할 수 있기 때문"),a("br"),t._v("\n프로토타입 체인의 종점에 위치하는 객체는 Object.prototype의 빌트인 메서드를 사용할 수 없음")]),t._v(" "),a("p",[t._v("따라 에러 발생 위험을 없애기 위해 Object.prototype의 빌트인 메서드는 간접적으로 호출하는 것이 좋음")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//TypeError")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_11-2-객체-리터럴-내부에서-proto-에-의한-직접-상속"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-객체-리터럴-내부에서-proto-에-의한-직접-상속"}},[t._v("#")]),t._v(" 11-2. 객체 리터럴 내부에서 __proto__에 의한 직접 상속")]),t._v(" "),a("p",[t._v("Object.create 메서드에 의한 직접 상속은 앞에서 다룬 것처럼 여러 장점이 있음"),a("br"),t._v("\n하지만 두 번째 인자로 프로퍼티를 정의하는 것은 번거로움"),a("br"),t._v("\n일단 객체 생성 이후 프로퍼티 추가하는 방법도 있으나 이 또한 깔끔한 방법은 아님")]),t._v(" "),a("p",[t._v("ES6에서는 객체 리터럴 내부에 __proto__접근자 프로퍼티를 사용해 직접 상속을 구현할 수 있음")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myProto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//객체 리터럴에 의해 객체 생성하면서 프로토타이븡ㄹ 지정해 직접 상속받을 수 있음")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//객체를 직접 상속받음")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj -> myProto -> Object.prototype -> null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("__proto__")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myProto\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10 20")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" myProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//위 코드는 아래와 동일함")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-정적-프로퍼티-메서드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-정적-프로퍼티-메서드"}},[t._v("#")]),t._v(" 12. 정적 프로퍼티/메서드")]),t._v(" "),a("p",[t._v("정적 프로퍼티/메서드란 생성자 함수로 인스턴스를 생성하지 않아도 참조/호출할 수 있는 프로퍼티/메서드를 말함"),a("br"),t._v("\n생성자 함수는 객체이므로 자신의 프로퍼티/메소드를 소유할 수 있음"),a("br"),t._v("\n생성자 함수 객체가 소유한 프로퍼티/메서드를 정적 프로퍼티/메서드라고 함")]),t._v(" "),a("p",[t._v("생성자 함수가 생성한 인스턴스는 자신의 프로토타입 체인에 속한 객체의 프로퍼티/메서드에 접근 가능하지만"),a("br"),t._v("\n정적 프로퍼티/메서드는 인스턴스의 프로토타입 체인에 속한 객체의 프로퍼티/메서드가 아니므로"),a("br"),t._v("\n인스턴스로 참조/호출할 수 없음")]),t._v(" "),a("p",[t._v("ex."),a("br"),t._v("\nObject.create 메서드는 Object 생성자 함수의 정적 메서드,"),a("br"),t._v("\nObject.prototype.hasOwnProperty 메서드는 Object.prototype의 메서드"),a("br"),t._v("\n따라 Object.create 메서드는 인스턴스(Object 생성자 함수가 생성한 객체)로 호출 불가"),a("br"),t._v("\nObject.pototype.hasOwnProperty 메서드는 모든 객체가 호출 가능함")]),t._v(" "),a("p",[t._v("만약 인스턴스/프로토타입 메서드 내에서 this를 사용하지 않는다면 그 메서드는 정적 메서드로 변경 가능함"),a("br"),t._v("\n인스턴스가 호출한 인스턴스/프로토타입 메서드 내에서 this는 인스턴스를 가리킴"),a("br"),t._v("\n메서드 내에서 인스턴스를 참조할 필요가 없다면 정적 메서드로 변경해도 동작함"),a("br"),t._v("\n프로토타입 메서드를 호출하려면 인스턴스를 생성해야만 하지만 정적 메서드는 인스턴스를 생성하지 않아도 호출 가능")]),t._v(" "),a("p",[t._v("참고로 프로토타입 프로퍼티/메서드를 표기 시 prototype을 #으로 포기하는 경우도 있음"),a("br"),t._v("\nObject.prototype.isPrototypeOf -> Object#isPrototypeOf")]),t._v(" "),a("h2",{attrs:{id:"_13-프로퍼티-존재-확인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-프로퍼티-존재-확인"}},[t._v("#")]),t._v(" 13. 프로퍼티 존재 확인")]),t._v(" "),a("h3",{attrs:{id:"_13-1-in-연산자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-in-연산자"}},[t._v("#")]),t._v(" 13-1. in 연산자")]),t._v(" "),a("ul",[a("li",[t._v("객체 내 특정 프로퍼티가 존재하는지 여부를 확인함")]),t._v(" "),a("li",[t._v("in 연산자는 확인 대상 객체의 프로퍼티 뿐 아니라"),a("br"),t._v("\n확인 대상 객체가 상속받은 모든 프로토타입의 프로퍼티를 확인함")]),t._v(" "),a("li",[t._v("in 연산자 대신 ES6에서 도입된 Reflect.has 메서드를 사용할 수도 있음 (in 연산자와 동일하게 동작함)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//key : 프로퍼티 키를 나타내는 문자열")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object : 객체로 평가되는 표현식")]),t._v("\nkey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" object\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seoul'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//person 객체에 name 프로퍼티가 존재")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_13-2-object-prototype-hasownproperty-메서드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-object-prototype-hasownproperty-메서드"}},[t._v("#")]),t._v(" 13-2. Object.prototype.hasOwnProperty 메서드")]),t._v(" "),a("ul",[a("li",[t._v("Object.prototype.hasOwnProperty 메서드를 사용해도 객체에 특정 프로퍼티가 존재하는지 확인 가능")]),t._v(" "),a("li",[t._v("인수로 전달받은 프로퍼티 키가 객체 고유의 프로퍼티 키인 경우에만 true 반환함"),a("br"),t._v("\n(상속받느 프로토타입의 프로퍼티 키인 경우 false 반환)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),a("h2",{attrs:{id:"_14-프로퍼티-열거"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-프로퍼티-열거"}},[t._v("#")]),t._v(" 14. 프로퍼티 열거")]),t._v(" "),a("h3",{attrs:{id:"_14-1-for-in-문"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-for-in-문"}},[t._v("#")]),t._v(" 14-1. for ...in 문")]),t._v(" "),a("ul",[a("li",[t._v("객체의 프로토타입 체인 상에 존재하는 모든 프로토타입의 프로퍼티 중"),a("br"),t._v("\n프로퍼티 어트리뷰트 [[Enumerable]]의 값이 true 프로퍼티를 순회하며 열거함")]),t._v(" "),a("li",[t._v("객체의 프로퍼티 개수만큼 순회하며 for...in 문의 변수 선언문에서 선언한 변수에 프로퍼티 키를 할당함")]),t._v(" "),a("li",[t._v("프로퍼티 키가 심벌인 프로퍼티는 열거하지 않음")]),t._v(" "),a("li",[t._v("상속받은 프로퍼티는 제외하고 객체 자신의 프로퍼티만 열겨하려면"),a("br"),t._v("\nObject.prototype.hasOwnProperty 메서드를 사용해 객체 자신의 프로퍼티인지 확인해야 함")]),t._v(" "),a("li",[t._v("for ...in문은 프로퍼티 열거 시 순서를 보장하지 않으므로 주의 필요"),a("br"),t._v("\nbut. 대부분의 모던 브라우저는 순서를 보장하고 숫자(사실 문자열)인 프로퍼티의 키에 대해서는 정렬을 실시함")]),t._v(" "),a("li",[t._v("배열에는 for...in문을 사용하지 말고 for문이나 for..of, Array.prototype.forEach 메서드 사용을 권장"),a("br"),t._v("\n배열도 객체이므로 프로퍼티와 상속받은 프로퍼티가 포함될 수 있음")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for (변수선언문 in 객체) {...}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seoul'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for ...in 문의 변수 prop에 person 객체의 프로퍼티키가 할당됨 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("': '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//name: Leo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//address: Seoul")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seoul'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sym"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("__proto__")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("': '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//name: Leo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//address: Seoul")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//age: 20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//객체 자신의 프로퍼티인지 확인")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("': '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//name: Leo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//address: Seoul")]),t._v("\n")])])]),a("h3",{attrs:{id:"_14-2-object-keys-values-entries-메서드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-object-keys-values-entries-메서드"}},[t._v("#")]),t._v(" 14-2. Object.keys/values/entries 메서드")]),t._v(" "),a("p",[t._v("객체 자신의 고유 프로퍼티만 열거하기 위해서는 for ...in문을 사용하는 것보다"),a("br"),t._v("\nObject.keys/values/entries 메서드 사용을 권장함")]),t._v(" "),a("ul",[a("li",[t._v("Object.keys : 객체 자신의 열거 가능한 프로퍼티 키를 배열로 반환함")]),t._v(" "),a("li",[t._v("Object.values : 객체 자신의 열거 가능한 프로퍼티 값을 배열로 반환함")]),t._v(" "),a("li",[t._v("Object.entries : 객체 자신의 열거 가능한 프로퍼티 키와 값의 쌍의 배열을 배열에 담아 반환함")])])])}),[],!1,null,null,null);s.default=e.exports}}]);