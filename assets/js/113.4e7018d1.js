(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{470:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jest"}},[t._v("#")]),t._v(" Jest")]),t._v(" "),a("p",[t._v("2021.08.20")]),t._v(" "),a("h2",{attrs:{id:"jest-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jest-2"}},[t._v("#")]),t._v(" jest")]),t._v(" "),a("ul",[a("li",[t._v("facebook에서 선보인 테스팅 도구")]),t._v(" "),a("li",[t._v("zero config 철학을 가지고 있음 (별도의 설정 없이 빠르게 테스트 케이스를 작성할 수 있음)")]),t._v(" "),a("li",[t._v("가장 많이 사용되는 테스트 도구 (front 뿐 아니라 backend 에서도 사용)")])]),t._v(" "),a("h2",{attrs:{id:"설치-및-간단한-테스트-작성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#설치-및-간단한-테스트-작성"}},[t._v("#")]),t._v(" 설치 및 간단한 테스트 작성")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("npm init")]),t._v(" 으로 package.json 생성")]),t._v(" "),a("li",[a("code",[t._v("npm install jest --save-dev")]),t._v(" jest install (개발할 때만 사용하기 때문에 개발 의존성으로 설치)")]),t._v(" "),a("li",[t._v('package.json 파일의 scripts test 부분을 "jest"로 변경')])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("fn.js 파일 생성")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test파일에서 사용할 수 있게 exports")]),t._v("\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("fn.test.js 파일 생성")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./fn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fn.js의 함수를 불러옴")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'설명 : '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'검증할 값'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'기대되는 값'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .toBe 부분에서 사용하는 함수를 Matcher 라고 함 : toBe는 숫자나 문자 등 기본타입 값을 비교할 때 사용")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1은 1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2 + 3 = 5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3 + 3 = 5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3 + 3 != 5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("not"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[a("code",[t._v("npm test")]),t._v(" 명령어를 실행하면 프로젝트 내 모든 테스트 파일들을 찾아서 테스트"),a("br"),t._v("\n(.test.js 로 끝나거나 __tests__폴더에 있는 파일들)"),a("br"),t._v("\n한 파일만 테스트하고 싶은 경우 "),a("code",[t._v("npm test <파일명 or 파일 경로>")])]),t._v(" "),a("li",[t._v("npm test 실행 시 결과값")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jest_tutorial@1.0.0 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" /Users/leo/Documents/study/jest\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jest\n\n FAIL  ./fn.test.js\n  ✕ 설명 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("은 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✕ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n  ● 설명 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" \n\n    expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("received"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toBe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // Object.is equality\n\n    Expected: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"기대되는 값"')]),t._v("\n    Received: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"검증할 값"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'테스트 설명'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'검증 대상'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toBe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'기대 결과'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                     ^\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     // .toBe 부분에서 사용하는 함수를 Matcher 라고 함 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" toBe는 숫자나 문자 등 기본타입 값을 비교할 때 사용\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n      at Object."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn.test.js:4:21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  ● "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n    expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("received"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toBe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // Object.is equality\n\n    Expected: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    Received: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3 + 3 = 5'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn.add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3,3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(".toBe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                         ^\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3 + 3 != 5'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n      at Object."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn.test.js:18:25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.575")]),t._v(" s, estimated "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites.\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" ERR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" Test failed.  See above "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" details.\n")])])]),a("h2",{attrs:{id:"test-mathcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-mathcher"}},[t._v("#")]),t._v(" Test Mathcher")]),t._v(" "),a("p",[t._v("Mathcher : .toBe 부분에서 사용하는 함수")]),t._v(" "),a("h3",{attrs:{id:"common-matchers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-matchers"}},[t._v("#")]),t._v(" Common Matchers")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jestjs.io/docs/en/expect",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jestjs.io/docs/en/expect"),a("OutboundLink")],1),t._v(" 참고")]),t._v(" "),a("h4",{attrs:{id:"tobe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobe"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBe()")])]),t._v(" "),a("ul",[a("li",[t._v("숫자나 문자 같은 원시데이터 일치 여부")]),t._v(" "),a("li",[t._v("object 값에 사용하면 같은 객체를 가리키고 있는지 확인함 (객체의 내용이 같더라도 다른 메모리에 있는 객체면 false)")]),t._v(" "),a("li",[t._v("객체나 배열은 값을 재귀적으로 돌면서 확인해줘야하기 떄문에 toEqual() 사용해야 함")])]),t._v(" "),a("h4",{attrs:{id:"toequal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#toequal"}},[t._v("#")]),t._v(" "),a("code",[t._v("toEqual()")])]),t._v(" "),a("ul",[a("li",[t._v("객체의 내용이 같은지 확인")]),t._v(" "),a("li",[t._v("jest는 "),a("code",[t._v("toBe()")]),t._v(" 대신 "),a("code",[t._v("toEqual()")]),t._v(" 함수 사용을 추천함")]),t._v(" "),a("li",[t._v("실제 테스트 코드 작성시에는 객체 검증할 일이 많기 떄문에 "),a("code",[t._v("toEqual()")]),t._v(" 함수를 가장 많이 접함")])]),t._v(" "),a("h3",{attrs:{id:"tostrictequal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostrictequal"}},[t._v("#")]),t._v(" "),a("code",[t._v("toStrictEqual()")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("toEqual()")]),t._v(" 엄격 모드")]),t._v(" "),a("li",[t._v("undefined 있을 시 에러 노출")])]),t._v(" "),a("h4",{attrs:{id:"not"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#not"}},[t._v("#")]),t._v(" "),a("code",[t._v("not")])]),t._v(" "),a("ul",[a("li",[t._v("불일치 여부 확인")])]),t._v(" "),a("h3",{attrs:{id:"truthiness"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#truthiness"}},[t._v("#")]),t._v(" Truthiness")]),t._v(" "),a("h4",{attrs:{id:"tobetruthy-tobefalsy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobetruthy-tobefalsy"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeTruthy() / toBeFalsy()")])]),t._v(" "),a("ul",[a("li",[t._v("true / false 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobenull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobenull"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeNull()")])]),t._v(" "),a("ul",[a("li",[t._v("null 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobeundefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobeundefined"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeUndefined()")])]),t._v(" "),a("ul",[a("li",[t._v("undefined 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobedefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobedefined"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeDefined()")])]),t._v(" "),a("ul",[a("li",[t._v("toBeUndefined의 반대 경우 확인")])]),t._v(" "),a("h3",{attrs:{id:"numbers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numbers"}},[t._v("#")]),t._v(" Numbers")]),t._v(" "),a("h4",{attrs:{id:"tobegreaterthan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobegreaterthan"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeGreaterThan()")])]),t._v(" "),a("ul",[a("li",[t._v("큰 숫자 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobegreaterthanorequal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobegreaterthanorequal"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeGreaterThanOrEqual()")])]),t._v(" "),a("ul",[a("li",[t._v("같거나 큰 숫자 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobelessthan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobelessthan"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeLessThan()")])]),t._v(" "),a("ul",[a("li",[t._v("작은 숫자 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tobelessthanorequal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tobelessthanorequal"}},[t._v("#")]),t._v(" "),a("code",[t._v("toBeLessThanOrEqual()")])]),t._v(" "),a("ul",[a("li",[t._v("같거나 작은 숫자 여부 확인")])]),t._v(" "),a("h4",{attrs:{id:"tomatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomatch"}},[t._v("#")]),t._v(" "),a("code",[t._v("toMatch()")])]),t._v(" "),a("ul",[a("li",[t._v("같거나 작은 숫자 여부 확인")])]),t._v(" "),a("h3",{attrs:{id:"strings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[t._v("#")]),t._v(" Strings")]),t._v(" "),a("h4",{attrs:{id:"tomatch-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tomatch-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("toMatch()")])]),t._v(" "),a("ul",[a("li",[t._v("정규식 사용해 문자열 일치 여부 확인")])]),t._v(" "),a("h3",{attrs:{id:"arrays-and-iterables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arrays-and-iterables"}},[t._v("#")]),t._v(" Arrays and iterables")]),t._v(" "),a("h4",{attrs:{id:"tocontain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tocontain"}},[t._v("#")]),t._v(" "),a("code",[t._v("toContain()")])]),t._v(" "),a("ul",[a("li",[t._v("배열이나 iteration 가능한 (set, map 등) 객체에 특정 요소 포함 여부 확인")])]),t._v(" "),a("h3",{attrs:{id:"exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),a("h4",{attrs:{id:"tothrow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tothrow"}},[t._v("#")]),t._v(" "),a("code",[t._v("toThrow()")])]),t._v(" "),a("ul",[a("li",[t._v("함수 호출시 에러 발생 여부 확인")]),t._v(" "),a("li",[t._v("단순 에러")]),t._v(" "),a("li",[t._v("특정 에러 지정")])]),t._v(" "),a("h2",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.daleseo.com/jest-basic/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest로 기본적인 테스트 작성하기"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=g4MdUjxA-S4&list=PLZKTXPmaJk8L1xCg_1cRjL5huINlP2JKt&index=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("코딩앙마 - Jest"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://velog.io/@xortm854/TDD%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90-2%ED%8E%B8TDD-%EC%84%A4%EC%A0%95ReactTypescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("TDD를 적용해보자 2편-TDD 설정(React,Typescript)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://velog.io/@modolee/jest-user-guide-04",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest 사용법"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);