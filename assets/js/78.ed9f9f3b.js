(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{438:function(t,_,v){"use strict";v.r(_);var r=v(44),a=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_38장-브라우저의-렌더링-과정"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_38장-브라우저의-렌더링-과정"}},[t._v("#")]),t._v(" 38장. 브라우저의 렌더링 과정")]),t._v(" "),v("p",[t._v("브라우저가 HTML, CSS, 자바스크립트 코드를 어떻게 파싱(해석)해 브라우저에 렌더링하는지 살펴보자")]),t._v(" "),v("ul",[v("li",[t._v("파싱(구문 분석) :"),v("br"),t._v("\n프로그래밍 언어 문법에 맞게 작성된 텍스트 문서를 읽고 실행하기 위해"),v("br"),t._v("\n텍스트 문서의 문자열을 토큰으로 분해(어휘 분석)하고,"),v("br"),t._v("\n토큰에 문법적 의미와 구조를 반영해 트리 구조의 자료 구조인 파스트리를 생성하는 일련의 과정"),v("br"),t._v("\n일반적으로 파싱 완료 이후에는 파스 트리를 기반으로 중간 언어인 바이트 코드를 생성하고 실행함")]),t._v(" "),v("li",[t._v("렌더링 :"),v("br"),t._v("\nHTML, CSS, 자바스크립트로 작성된 문자를 파싱해 브라우저에 시각적으로 출력하는 것")])]),t._v(" "),v("p",[t._v("브라우저는 아래와 같은 과정을 거쳐 렌더링을 수행함")]),t._v(" "),v("ol",[v("li",[t._v("브라우저는 HTML, CSS, 자바스크립트, 이미지, 폰트 파일 등"),v("br"),t._v("\n렌더링에 필요한 리소스를 요청하고 서버로부터 응답을 받음")]),t._v(" "),v("li",[t._v("브라우저의 렌더링 엔진은 서버로부터 응답된 HTML과 CSS를 파싱해 DOM과 CSSOM을 생성하고"),v("br"),t._v("\n이들을 결합해 렌더 트리를 생성함")]),t._v(" "),v("li",[t._v("브라우저의 자바스크립트 엔진은 서버로부터 응답된 자바스크립트를 파싱해"),v("br"),t._v("\nAST(Abstract Syntax Tree)를 생성하고 바이트코드로 변환해 실행함\n이때 자바스크립트는 DOM API를 통해 DOM이나 CSSOM을 변경할 수 있음"),v("br"),t._v("\n변경된 DOM과 CSSOM은 다시 렌더 트리로 결합됨")]),t._v(" "),v("li",[t._v("렌더 트리를 기반으로 HTML 요소의 레이아웃(위치와 크기)를 계산하고"),v("br"),t._v("\n브라우저 화면에 HTML 요소를 페인팅 함")])]),t._v(" "),v("h2",{attrs:{id:"_1-요청과-응답"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-요청과-응답"}},[t._v("#")]),t._v(" 1. 요청과 응답")]),t._v(" "),v("p",[t._v("브라우저 렌더링에 필요한 리소스는 모두 서버에 존재하므로 필요한 리소스를"),v("br"),t._v("\n서버에 요청하고 응답한 리소스를 파싱해서 렌더링함")]),t._v(" "),v("p",[t._v("서버에 요청을 전송하기 위해 브라우저는 주소창을 제공함"),v("br"),t._v("\n주소창에 URL 입력 -> URL의 호스트명이 DNS를 통해 IP주소로 변환되고 IP주소를 갖는 서버에 요청을 전송함")]),t._v(" "),v("p",[t._v("브라우저의 렌더링이 HTML을 파싱하는 도중 외부 리소스를 로드하는 태그(link, img, script 등)을"),v("br"),t._v("\n만나면 HTML 파싱을 일시 중단하고 해당 리소스 파일을 서버로 요청함")]),t._v(" "),v("h2",{attrs:{id:"_2-http-1-1과-http-2-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-1-1과-http-2-0"}},[t._v("#")]),t._v(" 2. HTTP 1.1과 HTTP 2.0")]),t._v(" "),v("h3",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),v("ul",[v("li",[t._v("웹에서 브라우저와 서버가 통신하기 위한 프로토콜")]),t._v(" "),v("li",[t._v("1989년, HTML, URL과 함께 팀 버너스 리 경이 고안함")]),t._v(" "),v("li",[t._v("1991년 최초로 문서화")]),t._v(" "),v("li",[t._v("1996년 HTTP 1/0, 1999년 HTTP/1.1, 2015년 HTTP/2가 발표됨")])]),t._v(" "),v("h3",{attrs:{id:"http-1-1과-http-2의-차이점"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1과-http-2의-차이점"}},[t._v("#")]),t._v(" HTTP/1.1과 HTTP/2의 차이점")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("HTTP/1.1")]),t._v(" "),v("ul",[v("li",[t._v("기본적으로 커넥션 당 하나의 요청과 응답만 처리함 -> 다중 요청/응답 불가"),v("br"),t._v("\n(여러 개의 요청을 한번에 전송할 수 없고 응답받을 수 없음)")]),t._v(" "),v("li",[t._v("리소스의 동시 전송이 불가능한 구조이므로 요청할 리소스 개수에 비례해 응답 시간 증가함")])])]),t._v(" "),v("li",[v("p",[t._v("HTTP/2")]),t._v(" "),v("ul",[v("li",[t._v("커넥션당 다중 요청/응답 가능")]),t._v(" "),v("li",[t._v("여러 리소스의 동시 전송이 가능하므로 HTTP/1.1에 비해 페이지 로드 속도가 약 50%정도 빠르다고 알려짐")])])])]),t._v(" "),v("h2",{attrs:{id:"_3-html-파싱과-dom-생성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-html-파싱과-dom-생성"}},[t._v("#")]),t._v(" 3. HTML 파싱과 DOM 생성")]),t._v(" "),v("p",[t._v("순수한 텍스트인 HTML 문서를 브라우저에 시각적인 픽셀로 렌더링하려면"),v("br"),t._v("\nHTML 문서를 브라우저가 이해 가능한 자료구조(객체)로 변환해 메모리에 저장해야 함"),v("br"),t._v("\n따라 브라우저의 렌더링 엔진은 (바이트 -> 문자 -> 토큰 -> 노드 -> DOM)과정을 통해"),v("br"),t._v("\n응답받은 HTML 문서를 파싱해 DOM을 생성함")]),t._v(" "),v("ol",[v("li",[t._v("서버에 존재하던 HTML 파일이 브라우저 요청에 의해 응답됨"),v("br"),t._v("\n이때 서버는 브라우저가 요청한 HTML 파일을 읽어 메모리에 저장한 후"),v("br"),t._v("\n메모리에 저장된 바이트(2진수)를 인터넷을 경유해 응답함")]),t._v(" "),v("li",[t._v("브라우저는 서버가 응답한 HTML 문서를 바이트 형태로 응답받음"),v("br"),t._v("\n응답된 바이트 형태의 HTML 문서는 meta 태그의 charset 어트리뷰트에 의해 지정된 인코딩 방식을 기준으로 문자열로 변환됨")])]),t._v(" "),v("h2",{attrs:{id:"_4-css-파싱과-cssom-생성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-css-파싱과-cssom-생성"}},[t._v("#")]),t._v(" 4. CSS 파싱과 CSSOM 생성")]),t._v(" "),v("h2",{attrs:{id:"_5-렌더-트리-생성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-렌더-트리-생성"}},[t._v("#")]),t._v(" 5. 렌더 트리 생성")]),t._v(" "),v("h2",{attrs:{id:"_6-자바스크립트-파싱과-실행"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-자바스크립트-파싱과-실행"}},[t._v("#")]),t._v(" 6. 자바스크립트 파싱과 실행")]),t._v(" "),v("h2",{attrs:{id:"_7-리플로우와-리페인트"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-리플로우와-리페인트"}},[t._v("#")]),t._v(" 7. 리플로우와 리페인트")]),t._v(" "),v("h2",{attrs:{id:"_8-자바스크립트-파싱에-의한-html-파싱-중단"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-자바스크립트-파싱에-의한-html-파싱-중단"}},[t._v("#")]),t._v(" 8. 자바스크립트 파싱에 의한 HTML 파싱 중단")]),t._v(" "),v("h2",{attrs:{id:"_9-script-태그의-async-defer-어트리뷰트"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-script-태그의-async-defer-어트리뷰트"}},[t._v("#")]),t._v(" 9. script 태그의 async/defer 어트리뷰트")])])}),[],!1,null,null,null);_.default=a.exports}}]);