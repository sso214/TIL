(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{498:function(t,s,a){"use strict";a.r(s);var n=a(65),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_23장-실행-컨텍스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23장-실행-컨텍스트"}},[t._v("#")]),t._v(" 23장. 실행 컨텍스트")]),t._v(" "),a("h2",{attrs:{id:"_1-소스코드의-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-소스코드의-타입"}},[t._v("#")]),t._v(" 1. 소스코드의 타입")]),t._v(" "),a("p",[t._v("ECMAScript 사양은 소스코드(=실행 가능한 코드)를 4가지 타입으로 구분함"),a("br"),t._v("\n각 타입의 소스코드는 실행 컨텍스트를 생성함")]),t._v(" "),a("h3",{attrs:{id:"_4가지-타입의-소스코드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4가지-타입의-소스코드"}},[t._v("#")]),t._v(" 4가지 타입의 소스코드")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("전역 코드")]),a("br"),t._v("\n전역에 존재하는 소스코드"),a("br"),t._v("\n전역에 정의된 함수, 클래스 등의 내부 코드는 포함되지 않음")]),t._v(" "),a("li",[a("strong",[t._v("함수 코드")]),a("br"),t._v("\n함수 내부에 존재하는 소스코드"),a("br"),t._v("\n함수 내부에 중첩된 함수, 클래스 등의 내부 코드는 포함되지 않음")]),t._v(" "),a("li",[a("strong",[t._v("eval 코드")]),a("br"),t._v("\n빌트인 전역 함수인 eval 함수에 인수로 전달되어 실행되는 소스코드")]),t._v(" "),a("li",[a("strong",[t._v("모듈 코드")]),a("br"),t._v("\n모듈 내부에 존재하는 소스코드"),a("br"),t._v("\n모듈 내부의 함수, 클래스 등의 내부 코드는 포함되지 않음")])]),t._v(" "),a("h3",{attrs:{id:"타입에-따른-실행-컨텍스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#타입에-따른-실행-컨텍스트"}},[t._v("#")]),t._v(" 타입에 따른 실행 컨텍스트")]),t._v(" "),a("p",[t._v("소스코드 타입을 구분하는 이유는"),a("br"),t._v("\n타입에 따라 실행 컨텍스트를 생성하는 과정과 관리 내용이 다르기 때문")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("전역 코드")]),t._v(" "),a("ul",[a("li",[t._v("전역 변수 관리를 위해 최상위 스코프인 전역 스코프를 생성해야 함")]),t._v(" "),a("li",[t._v("var 전역 변수와 함수 선언문 전역 함수를 전역 객체의 프로퍼티와 메서드로"),a("br"),t._v("\n바인딩하고 참조하기 위해 전역 객체와 연결되어야 함")]),t._v(" "),a("li",[t._v("이를 위해 전역 코드가 평가되면 전역 실행 컨텍스트가 생성됨")])])]),t._v(" "),a("li",[a("strong",[t._v("함수 코드")]),t._v(" "),a("ul",[a("li",[t._v("지역 스코프를 생성하고 지역 변수, 매개변수, arguments 객체를 관리해야 함")]),t._v(" "),a("li",[t._v("생성한 지역 스코프를 전역 스코프에서 시작하는 스코프 체인의 일원으로 연결해야 함")]),t._v(" "),a("li",[t._v("이를 위해 함수 코드가 평가되면 함수 실행 컨텍스트가 생성됨")])])]),t._v(" "),a("li",[a("strong",[t._v("eval 코드")]),t._v(" "),a("ul",[a("li",[t._v("strict mode에서 자신만의 독자적인 스코프를 생성함")]),t._v(" "),a("li",[t._v("이를 위해 eval 코드가 평가되면 eval 실행 컨텍스트가 생성됨")])])]),t._v(" "),a("li",[a("strong",[t._v("모듈 코드")]),t._v(" "),a("ul",[a("li",[t._v("모듈별로 독립적인 모듈 스코프를 생성함")]),t._v(" "),a("li",[t._v("이를 위해 모듈 코드가 평가되면 모듈 실행 컨텍스트가 생성됨")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-소스코드의-평가와-실행"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-소스코드의-평가와-실행"}},[t._v("#")]),t._v(" 2. 소스코드의 평가와 실행")]),t._v(" "),a("p",[t._v("자바스크립트 엔진은 소스코드를 '소스코드의 평가'와 '소스코드의 실행' 2개의 과정으로 나누어 처리함")]),t._v(" "),a("ul",[a("li",[t._v("소스코드 평가 과정\n"),a("ul",[a("li",[t._v("실행 컨텍스트를 생성")]),t._v(" "),a("li",[t._v("변수, 함수 등의 선언문만 먼저 실행해 생성된 변수나 함수 식별자를 키로"),a("br"),t._v("\n실행 컨텍스트가 관리하는 스코프(렉시컬 환경의 환경 레코드)에 등록")])])]),t._v(" "),a("li",[t._v("소스코드 실행 과정\n"),a("ul",[a("li",[t._v("소스코드 평가 과정이 끝나면 선언문을 제외한 소스코드가 순차적으로 실행(=런타임 시작)")]),t._v(" "),a("li",[t._v("실행에 필요한 정보(변수, 함수의 참조)를 실행 컨텍스트가 관리하는 스코프에서 검색해서 취득")]),t._v(" "),a("li",[t._v("실행 결과(변수 값의 변경 등)는 다시 실행 컨텍스트가 관리하는 스코프에 등록됨")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("자바스크립트 엔진은 위 코드를 2개의 과정으로 나누어 처리")]),t._v(" "),a("ol",[a("li",[t._v("소스코드 평가 과정\n"),a("ul",[a("li",[t._v("변수 선언문 var x;를 먼저 실행")]),t._v(" "),a("li",[t._v("이때 실행된 변수 식별자 x는 실행 컨텍스트가 관리하는 스코프에 등록되고 undefined로 초기화됨")])])]),t._v(" "),a("li",[t._v("소스코드 실행 과정\n"),a("ul",[a("li",[t._v("소스코드 평가 과정이 끝나면 소스코드 실행 과정 실행")]),t._v(" "),a("li",[t._v("변수 선언문 var x;는 소스코드 평가 과정에서 이미 실행이 완료됨. 따라 변수 할당문 x = 1;만 실행")]),t._v(" "),a("li",[t._v("이때 x변수가 선언된 변수인지 확인하기 위해 실행 컨텍스트가 관리하는 스코프에 등록되어 있는지 확인함")]),t._v(" "),a("li",[t._v("x변수가 선언된 변수라면 값을 할당하고 할당 결과를 실행 컨텍스트에 등록하여 관리함")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-실행-컨텍스트의-역할"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-실행-컨텍스트의-역할"}},[t._v("#")]),t._v(" 3. 실행 컨텍스트의 역할")]),t._v(" "),a("p",[t._v("예시는 전역 코드와 함수 코드로 구성되어 있으며 아래 과정처럼 코드를 평가하고 실행함")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//전역 변수 선언")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 정의")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//지역 변수 선언")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//메서드 호출")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//140")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//함수 호출")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//메서드 호출")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n")])])]),a("ol",[a("li",[a("p",[a("strong",[t._v("전역 코드 평가")]),a("br"),t._v("\n먼저 전역 코드 평가 과정을 거치며 전역 코드 실행을 위한 준비를 함"),a("br"),t._v("\n소스코드 평가 과정에서는 선언문만 먼저 실행됨")]),t._v(" "),a("p",[t._v("전역 코드의 변수 선언문과 함수 선언문 먼저 실행"),a("br"),t._v("\n그 결과 생성된 전역 변수와 전역 함수가 실행 컨텍스트가 관리하는 전역 스코프에 등록됨"),a("br"),t._v("\n이때 var 키워드로 선언된 전역 변수와 함수 선언문으로 정의된 전역 함수는 전역 객체의 프로퍼티와 메서드가 됨")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("전역 코드 실행")]),a("br"),t._v("\n전역 코드 평가 과정이 끝나면 런타임이 시작되어 전역 코드가 순차적으로 실행됨"),a("br"),t._v("\n전역 변수에 값이 할당되고 함수가 호출됨"),a("br"),t._v("\n함수 호출 시 전역 코드의 실행을 일시 중단하고 코드 실행 순서를 변경해 함수 내부로 진입함")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("함수 코드 평가")]),a("br"),t._v("\n함수 내부 문들을 실행하기에 앞서 함수 코드 평가 과정을 거침"),a("br"),t._v("\n매개변수와 지역 변수 선언문이 먼저 실행되고"),a("br"),t._v("\n그 결과 생성된 매개변수와 지역 변수가 실행 컨텍스트가 관리하는 지역 스코프에 등록됨"),a("br"),t._v("\n함수 내부에서 지역 변수처럼 사용 가능한 arguments 객체가 생성되어 지역 스코프에 등록되고"),a("br"),t._v("\nthis 바인딩도 결정됨")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("함수 코드 실행")]),a("br"),t._v("\n함수 코드 평가 과정이 끝나면 런타임이 시작되어 함수 코드가 순차적으로 실행됨"),a("br"),t._v("\n매개변수와 지역 변수 값이 할당되고 console.log 메서드가 호출됨")]),t._v(" "),a("p",[t._v("console.log 메서드 호출을 위해 먼저 식별자인 console을 스코프 체인을 통해 검색"),a("br"),t._v("\n이를 위해 함수 코드의 지역 스코프는 상위 스코프인 전역 스코프와 연결되어 있어야 함"),a("br"),t._v("\n하지만 console 식별자는 스코프체인에 등록되어 있지 않고 전역 객체에 프로퍼티로 존재"),a("br"),t._v("\n이는 전역 객체의 프로퍼티가 마치 전역 변수처럼 전역 스코프를 통해 검색 가능해야 한다는 것을 의미")]),t._v(" "),a("p",[t._v("다음은 log 프로퍼티를 console 객체의 프로토타입 체인을 통해 검색함"),a("br"),t._v("\n그 후 console.log 메서드에 인수로 전달된 표현식 a + x + y가 평가됨"),a("br"),t._v("\na, x, y 식별자는 스코프 체인을 통해 검색함")]),t._v(" "),a("p",[t._v("console.log 메서드의 실행이 종료되면 함수 코드 실행 과정이 종료되고"),a("br"),t._v("\n함수 호출 이전으로 되돌아가 전역 코드 실행을 계속함")])])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("이처럼 코드가 실행되려면 스코프, 식별자, 코드 실행 순서 등의 관리가 필요함"),a("br"),t._v("\n이 모든 것을 관리하는게 바로 실행 컨텍스트이며, 모든 코드는 실행 컨텍스트를 통해 실행되고 관리됨")]),t._v(" "),a("ul",[a("li",[t._v("선언에 의해 생성된 모든 식별자를 스코프를 구분해 등록하고 상태 변화를 지속적으로 관리해야 함")]),t._v(" "),a("li",[t._v("스코프 체인을 통해 상위 스코프로 이동하며 식별자를 검색할 수 있어야 함")]),t._v(" "),a("li",[t._v("현재 실행 중인 코드의 실행 순서를 변경할 수 있어야 하며 다시 되돌아갈 수도 있어야 함")]),t._v(" "),a("li",[t._v("전역 객체의 프로퍼티도 전역 변수처럼 검색 가능해야 함")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("실행 컨텍스트는")]),t._v(" "),a("ul",[a("li",[t._v("소스코드를 실행하는데 필요한 환경을 제공")]),t._v(" "),a("li",[t._v("코드의 실행 결과를 실제로 관리하는 영역")]),t._v(" "),a("li",[t._v("식별자를 등록하고 관리하는 스코프와 코드 실행 순서 관리를 구현한 내부 메커니즘")]),t._v(" "),a("li",[t._v("식별자와 스코프는 실행 컨텍스트의 렉시컬 환경으로 관리")]),t._v(" "),a("li",[t._v("코드 실행 순서는 실행 컨텍스트 스택으로 관리")])]),t._v(" "),a("h2",{attrs:{id:"_4-실행-컨텍스트-스택"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-실행-컨텍스트-스택"}},[t._v("#")]),t._v(" 4. 실행 컨텍스트 스택")]),t._v(" "),a("p",[t._v("생성된 실행 컨텍스트는 스택 자료구조로 관리됨"),a("br"),t._v("\n이를 "),a("strong",[t._v("실행 컨텍스트 스택")]),t._v("이라고 부름"),a("br"),t._v("\n코드가 실행되는 시간의 흐름에 따라 실행 컨텍스트 스택에는 실행 컨텍스트가 추가되고 제거됨")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6")]),t._v("\n")])])]),a("ol",[a("li",[a("p",[a("strong",[t._v("전역 코드의 평가와 실행")])]),t._v(" "),a("ul",[a("li",[t._v("자바스크립트 엔진은 먼저 전역 코드를 평가해 전역 실행 컨텍스트를 생성하고 실행 컨텍스트 스택에 푸시함")]),t._v(" "),a("li",[t._v("전역 변수 x와 전역 함수 foo는 전역 실행 컨텍스트에 등록됨")]),t._v(" "),a("li",[t._v("이후 전역 코드가 실행되기 시작해 전역 변수 x에 값이 할당되고 전역 함수 foo가 호출됨")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("foo 함수 코드의 평가와 실행")])]),t._v(" "),a("ul",[a("li",[t._v("전역 함수 foo 호출 시 전역 코드의 실행은 일시 중단되고 코드의 제어권이 foo 함수 내부로 이동함")]),t._v(" "),a("li",[t._v("자바스크립트 엔진은 foo 함수 내부의 함수코드를 평가해 foo 함수 실행 컨텍스트를 생성하고"),a("br"),t._v("\n실행 컨텍스트 스택에 푸쉬함")]),t._v(" "),a("li",[t._v("foo 함수의 지역 변수 y와 중첩함수 bar가 foo 함수 실행 컨텍스트에 등록됨")]),t._v(" "),a("li",[t._v("foo 함수 코드가 실행되기 시작해 지역 변수 y에 값이 할당되고 중첩 함수 bar가 호출됨")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("bar 함수 코드의 평가와 실행")])]),t._v(" "),a("ul",[a("li",[t._v("중첩 함수 bar 호출 시 foo 함수 코드의 실행은 일시 중단되고 코드의 제어권이 bar 함수 내부로 이동함")]),t._v(" "),a("li",[t._v("자바스크릡트 엔진은 bar 함수 내부의 함수코드를 평가해 bar 함수 실행 컨텍스트를 생성하고"),a("br"),t._v("\n실행 컨텍스트 스택에 푸쉬함")]),t._v(" "),a("li",[t._v("bar 함수의 지역 변수 z가 bar 함수 실행 컨텍스트에 등록됨")]),t._v(" "),a("li",[t._v("bar 함수 코드가 실행되기 시작해 지역 변수 z에 값이 할당되고 console.log 메서드를 호출")]),t._v(" "),a("li",[t._v("코드 실행 완료 후 bar 함수는 종료됨")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("foo 함수 코드로 복귀")])]),t._v(" "),a("ul",[a("li",[t._v("bar 함수 종료 시 코드의 제어권은 다시 foo 함수로 이동함"),a("br"),t._v("\n이때 자바스크립트 엔진은 bar 함수 실행 컨텍스트를 실행 컨텍스트 스택에서 팝하여 제거함")]),t._v(" "),a("li",[t._v("foo 함수는 더 이상 실행할 코드가 없으므로 종료함")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("전역 코드로 복귀")])]),t._v(" "),a("ul",[a("li",[t._v("foo 함수 종료 시 코드의 제어권은 다시 전역 코드로 이동함"),a("br"),t._v("\n이때 자바스크립트 엔진은 foo 함수 실행 컨텍스트를 실행 컨텍스트 스택에서 팝하여 제거함")]),t._v(" "),a("li",[t._v("전역 코드에도 더 이상 실행할 코드가 없으므로"),a("br"),t._v("\n전역 실행 컨텍스트도 실행 컨텍스트 스택에서 팝되어 실행 컨텍스트 스택에는 아무것도 남아있지 않게 됨")])])])]),t._v(" "),a("p",[t._v("이처럼 "),a("strong",[t._v("실행 컨텍스트 스택은 코드의 실행 순서를 관리함")]),a("br"),t._v("\n소스코드가 평가되면 실행 컨텍스트가 생성되고 실행 컨텍스트 스택의 최상위에 쌓임"),a("br"),t._v("\n(실행 컨텍스트 스택의 최상위에 존재하는 실행 컨텍스트 = "),a("strong",[t._v("실행 중인 실행 컨텍스트")]),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"_5-렉시컬-환경"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-렉시컬-환경"}},[t._v("#")]),t._v(" 5. 렉시컬 환경")]),t._v(" "),a("ul",[a("li",[t._v("식별자와 식별자에 바인딩된 값, 상위 스코프에 대한 참조를 기록하는 자료구조")]),t._v(" "),a("li",[t._v("실행 컨텍스트를 구성하는 컴포넌트")]),t._v(" "),a("li",[t._v("실행 컨텍스트 스택이 코드의 실행 순서를 관리한다면 렉시컬 환경은 스코프와 식별자를 관리함")]),t._v(" "),a("li",[t._v("키와 값을 갖는 객체 형태의 스코프를 생성해 식별자를 키로 등록하고 식별자에 바인딩된 값을 관리함")]),t._v(" "),a("li",[t._v("스코프를 구분해 식별자를 등록하고 관리하는 저장소 역할을 하는 렉시컬 스코프의 실체")]),t._v(" "),a("li",[t._v("렉시컬 환경은 두 개의 컴포넌트로 구성됨\n"),a("ul",[a("li",[t._v("환경 레코드"),a("br"),t._v("\n스코프에 포함된 식별자를 등록하고 등록된 식별자에 바인딩된 값을 관리하는 저장소"),a("br"),t._v("\n소스코드의 타입에 따라 관리하는 내용에 차이가 있음")]),t._v(" "),a("li",[t._v("외부 렉시컬 환경에 대한 참조"),a("br"),t._v("\n상위 스코프를 가리킴"),a("br"),t._v("\n(상위 스코프 : 해당 실행 컨텍스트를 생성한 소스코드를 포함하는 상위 코드의 렉시컬 환경)"),a("br"),t._v("\n이를 통해 단방향 리크드 리스트인 스코프 체인을 구현함")])])])]),t._v(" "),a("h2",{attrs:{id:"_6-실행-컨텍스트의-생성과-식별자-검색-과정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-실행-컨텍스트의-생성과-식별자-검색-과정"}},[t._v("#")]),t._v(" 6. 실행 컨텍스트의 생성과 식별자 검색 과정")]),t._v(" "),a("p",[t._v("아래 코드를 통해 어떻게 실행 컨텍스트가 생성되고 코드 실행 결과가 관리되는지,"),a("br"),t._v("\n그리고 어떻게 실행 컨텍스트를 통해 식별자를 검색하는지 살펴봄")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//42")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-1-전역-객체-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-전역-객체-생성"}},[t._v("#")]),t._v(" 6-1. 전역 객체 생성")]),t._v(" "),a("ul",[a("li",[t._v("전역 객체는 전역 코드가 평가되기 이전에 생성됨")]),t._v(" "),a("li",[t._v("전역 객체에는 빌트인 전역 프로퍼티의 빌트인 전역 함수, 표준 빌트인 객체가 추가되며"),a("br"),t._v("\n동작 환경에 따라 클라이언트 사이드 Web API 또는 특정 환경을 위한 호스트 객체를 포함함")]),t._v(" "),a("li",[t._v("전역 객체도 Object.prototype을 상속받으므로 프로토타입 체인의 일원")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.prototype.toString")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"[Object Window]"')]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-2-전역-코드-평가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-전역-코드-평가"}},[t._v("#")]),t._v(" 6-2. 전역 코드 평가")]),t._v(" "),a("p",[t._v("소스코드가 로드되면 자바스크립트 엔진은 아래와 같은 순서로 전역 코드를 평가함")]),t._v(" "),a("ol",[a("li",[t._v("전역 실행 컨텍스트 생성")]),t._v(" "),a("li",[t._v("전역 렉시컬 환경 생성"),a("br"),t._v("\n2.1. 전역 환경 레코드 생성"),a("br"),t._v("\n       2.1.1. 객체 환경 레코드 생성"),a("br"),t._v("\n       2.1.2. 선언적 환경 레코드 생성"),a("br"),t._v("\n2.2. this 바인딩"),a("br"),t._v("\n2.3. 외부 렉시컬 환경에 대한 참조 결정")])]),t._v(" "),a("h4",{attrs:{id:"_1-전역-실행-컨텍스트-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-전역-실행-컨텍스트-생성"}},[t._v("#")]),t._v(" 1. 전역 실행 컨텍스트 생성")]),t._v(" "),a("p",[t._v("비어있는 전역 실행 컨텍스트를 생성해 실행 컨텍스트 스택에 푸쉬함"),a("br"),t._v("\n이때 전역 실행 컨텍스트는 실행 컨텍스트 스택의 최상위(=실행 중인 실행 컨텍스트)가 됨")]),t._v(" "),a("h4",{attrs:{id:"_2-전역-렉시컬-환경-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-전역-렉시컬-환경-생성"}},[t._v("#")]),t._v(" 2. 전역 렉시컬 환경 생성")]),t._v(" "),a("p",[t._v("전역 렉시컬 환경을 생성하고 전역 실행 컨텍스트에 바인딩함"),a("br"),t._v("\n렉시컬 환경은 2개의 컴포넌트(환경 레코드/외부 렉시컬 환경에 대한 참조)로 구성됨")]),t._v(" "),a("h4",{attrs:{id:"_2-1-전역-환경-레코드-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-전역-환경-레코드-생성"}},[t._v("#")]),t._v(" 2.1. 전역 환경 레코드 생성")]),t._v(" "),a("p",[t._v("전역 환경 레코드는 전역 변수를 관리하는 전역 스코프, 전역 객체의 빌트인 전역 프로퍼티와"),a("br"),t._v("\n빌트인 전역 함수, 표준 빌트인 객체를 제공함")]),t._v(" "),a("p",[t._v("ES6 이전에는 모든 전역 변수가 전역 객체의 프로퍼티가 되므로 전역 객체가 전역 환경 레코드의 역할을 했지만"),a("br"),t._v("\nES6의 let/const 전역 변수는 전역 객체의 프로퍼티가 되지 않고 개념적인 블록 내에 존재하게 되므로"),a("br"),t._v("\nvar 전역 변수와 let/const 전역 변수를 구분해서 관리하기 위해"),a("br"),t._v("\n전역 스코프 역할을 하는 전역 환경 레코드는 객체 환경 레코드와 선언적 환경 레코드로 구성되어 있음")]),t._v(" "),a("ul",[a("li",[t._v("객체 환경 레코드"),a("br"),t._v("\n기존 전역 객체가 관리하던 var 키워드로 선언한 전역 변수, 함수 선언문으로 정의한 전역 함수,"),a("br"),t._v("\n빌트인 전역 프로퍼티와 빌트인 전역 함수, 표준 빌트인 객체를 관리")]),t._v(" "),a("li",[t._v("선언적 환경 레코드"),a("br"),t._v("\nlet, const 키워드로 선언한 전역 변수를 관리")])]),t._v(" "),a("p",[t._v("객체 환경 레코드와 선언적 환경 레코드는 서로 협력해"),a("br"),t._v("\n전역 스코프와 전역 객체(전역 변수의 전역 객체 프로퍼티화)를 관리함")]),t._v(" "),a("h4",{attrs:{id:"_2-1-1-객체-환경-레코드-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-객체-환경-레코드-생성"}},[t._v("#")]),t._v(" 2.1.1. 객체 환경 레코드 생성")]),t._v(" "),a("p",[t._v("객체 환경 레코드는 BindingObject라고 불리는 객체와 연결됨"),a("br"),t._v("\n(BindingObject : '전역 객체 생성'에서 생성된 전역 객체)")]),t._v(" "),a("p",[t._v("전역 코드 평가 과정에서 var 전역 변수와 함수 선언문 전역 함수는"),a("br"),t._v("\n객체 환경 레코드에 연결된 BindingObject를 통해 전역 객체의 프로퍼티와 메서드가 됨"),a("br"),t._v("\n그리고 이때 등록된 식별자를 객체 환경 레코드에서 검색하면 전역 객체의 프로퍼티를 검색해 반환함")]),t._v(" "),a("p",[t._v("= var 전역 변수와 함수 선언문 전역 함수가 전역 객체의 프로퍼티와 메서드가 되고"),a("br"),t._v("\n전역 객체를 가리키는 식별자(window) 없이 전역 객체의 프로퍼티를 참조할 수 있는 메커니즘")]),t._v(" "),a("p",[t._v("예제의 전역 변수 x와 전역 함수 foo는 객체 환경 레코드를 통해"),a("br"),t._v("\n객체 환경 레코드의 BindingObject에 바인딩되어 있는 전역 객체의 프로퍼티와 메서드가 됨")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("x 변수는 var 키워드로 선언한 변수이므로 선언과 초기화가 동시에 진행되기 때문에"),a("br"),t._v("\n전역 코드 평가 시점에 객체 환경 레코드에 바인딩된 BindingObject를 통해"),a("br"),t._v("\n전역 객체에 변수 식별자를 키로 등록한 뒤, 암묵적으로 undefined를 바인딩함")]),t._v(" "),a("p",[t._v("따라 var 키워드로 선언한 변수는 코드 실행 단계에서 변수 선언문 이전에도 참조 가능함"),a("br"),t._v("\n(var 키워드로 선언한 변수에 할당한 함수 표현식도 이와 동일하게 동작함)"),a("br"),t._v("\n이것이 변수 호이스팅이 발생하는 원인")]),t._v(" "),a("p",[t._v("함수 선언문으로 정의한 함수가 평가되면 함수명과 동일한 이름의 식별자를 객체 환경 레코드에 바인딩 된"),a("br"),t._v("\nBindingObject를 통해 전역 객체에 키로 등록하고 생성된 함수 객체를 즉시 할당함"),a("br"),t._v("\n이것이 변수 호이스팅과 함수 호이스팅의 차이"),a("br"),t._v("\n때문에 함수 선언문으로 정의한 함수는 함수 선언문 이전에 호출 가능함")]),t._v(" "),a("h4",{attrs:{id:"_2-1-2-선언적-환경-레코드-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-선언적-환경-레코드-생성"}},[t._v("#")]),t._v(" 2.1.2. 선언적 환경 레코드 생성")]),t._v(" "),a("p",[t._v("let/const 전역 변수(let/const 변수에 할당한 함수 표현식 포함)는 선언적 환경 레코드에 등록되고 관리됨"),a("br"),t._v("\nlet/const 전역 변수는 전역 객체의 프로퍼티가 되지 않고"),a("br"),t._v("\n개념적인 블록 내에 존재하게 된다고 했는데 개념적인 블록이 바로 선언적 환경 레코드")]),t._v(" "),a("p",[t._v("전역 변수 y는 let/const 변수이므로 전역 객체의 프로퍼티가 되지 않아 전역 객체의 프로퍼티로서 참조 불가능"),a("br"),t._v("\n또한 let/const 변수도 변수 호이스팅이 발생하지만 선언과 초기화 단계가 분리되어 진행되므로"),a("br"),t._v("\n초기화 단계(=런타임에 실행 흐름이 변수 선언문에 도달하기 전)까지 일시적 사각지대(TDZ)에 빠지게 됨"),a("br"),t._v("\n따라 참조 불가능함")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let/const 변수도 호이스팅되므로 전역 변수 참조가 아닌 참조 에러가 발생함")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-2-this-바인딩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-this-바인딩"}},[t._v("#")]),t._v(" 2.2 this 바인딩")]),t._v(" "),a("p",[t._v("전역 환경 레코드의 [[GlobalThisValue]] 내부 슬롯에 this가 바인딩 됨"),a("br"),t._v("\n일반적으로 전역 코드에서 this는 전역 객체를 가리키므로"),a("br"),t._v("\n전역 환경 레코드의 [[GlobalThisValue]] 내부 슬롯에는 전역 객체가 바인딩 됨"),a("br"),t._v("\n전역 코드에서 this 참조 시 전역 환경 레코드의 [[GlobalThisValue]] 내부 슬롯에 바인딩되어 있는 객체가 반환됨")]),t._v(" "),a("p",[t._v("참고로 전역 환경 레코드를 구성하는 객체 환경 레코드와 선언적 환경 레코드에는 this 바인딩이 없음"),a("br"),t._v("\nthis 바인딩은 전역 환경 레코드와 함수 환경 레코드에만 존재함")]),t._v(" "),a("h4",{attrs:{id:"_2-3-외부-렉시컬-환경에-대한-참조-결정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-외부-렉시컬-환경에-대한-참조-결정"}},[t._v("#")]),t._v(" 2.3 외부 렉시컬 환경에 대한 참조 결정")]),t._v(" "),a("p",[t._v("외부 렉시컬 환경에 대한 참조는 상위 스코프를 가리키며"),a("br"),t._v("\n이를 통해 단방향 링크드 리스트인 스코프 체인을 구현함")]),t._v(" "),a("p",[t._v("현재 평가 중인 소스코드는 전역 코드이며 전역 코드를 포함하는 소스코드는 없으므로"),a("br"),t._v("\n전역 렉시컬 환경의 외부 렉시컬 환경에 대한 참조에 null이 할당됨"),a("br"),t._v("\n(전역 렉시컬 환경이 스코프 체인의 종점에 존재함을 의미함)")]),t._v(" "),a("h3",{attrs:{id:"_6-3-전역-코드-실행"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-전역-코드-실행"}},[t._v("#")]),t._v(" 6-3. 전역 코드 실행")]),t._v(" "),a("p",[t._v("전역 코드가 순차적으로 실행되기 시작함"),a("br"),t._v("\n변수 할당문이 실행되어 전역 변수 x, y에 값이 할당되며 foo 함수가 호출됨")]),t._v(" "),a("p",[t._v("변수 할당문, 함수 호출문을 실행하려면 먼저 해당 식별자가 선언되었는지 확인해야 함"),a("br"),t._v("\n또한 동일한 이름의 식별자가 다른 스코프에 여러개 존재할 수도 있으므로 어느 스코프의 식별자를"),a("br"),t._v("\n참조하면 되는지 결정해야 함 (=식별자 결정)")]),t._v(" "),a("p",[t._v("식별자 결정을 위해 식별자를 검색할 때는 실행 중인 실행 컨텍스트에서 식별자를 검색하기 시작함"),a("br"),t._v("\n(선언된 식별자는 실행 컨텍스트의 렉시컬 환경 > 환경 레코드에 등록되어 있음)"),a("br"),t._v("\n해당 식별자를 찾지 못한 경우 외부 렉시컬 환경에 대한 참조가 가리키는 상위 스코프로 이동해 식별자를 검색함"),a("br"),t._v("\n=> 스코프 체인의 동작 원리")]),t._v(" "),a("p",[t._v("현재 실행 중인 실행 컨텍스트는 전역 실행 컨텍스트이므로 전역 렉시컬 환경에서 x, y, foo 식별자를 검색함"),a("br"),t._v("\n전역 렉시컬 환경은 스코프 체인의 종점이므로 전역 렉시컬 환경에서 찾지 못하는 식별자는 참조 에러를 발생시킴"),a("br"),t._v("\n(식별자 결정에 실패했기 때문)")]),t._v(" "),a("h3",{attrs:{id:"_6-4-foo-함수-코드-평가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-foo-함수-코드-평가"}},[t._v("#")]),t._v(" 6-4. foo 함수 코드 평가")]),t._v(" "),a("p",[t._v("foo 함수가 호출되면 전역 코드의 실행을 일시 중단하고 foo 함수 내부로 코드의 제어권이 이동함"),a("br"),t._v("\n그리고 함수 코드를 아래 순서로 평가하기 시작함")]),t._v(" "),a("ol",[a("li",[t._v("함수 실행 컨텍스트 생성")]),t._v(" "),a("li",[t._v("함수 렉시컬 환경 생성"),a("br"),t._v("\n2.1. 함수 환경 레코드 생성"),a("br"),t._v("\n2.2. this 바인딩"),a("br"),t._v("\n2.3. 외부 렉시컬 환경에 대한 참조 결정")])]),t._v(" "),a("h4",{attrs:{id:"_1-함수-실행-컨텍스트-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-함수-실행-컨텍스트-생성"}},[t._v("#")]),t._v(" 1. 함수 실행 컨텍스트 생성")]),t._v(" "),a("p",[t._v("먼저 foo 함수 실행 컨텍스트를 생성하며 생성된 함수 실행 컨텍스트는"),a("br"),t._v("\n함수 렉시컬 환경이 완성된 다음 실행 컨텍스트 스택에 푸쉬됨"),a("br"),t._v("\n(이때 foo 함수 실행 컨텍스트는 실행 중인 실행 컨텍스트가 됨)")]),t._v(" "),a("h4",{attrs:{id:"_2-함수-렉시컬-환경-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-함수-렉시컬-환경-생성"}},[t._v("#")]),t._v(" 2. 함수 렉시컬 환경 생성")]),t._v(" "),a("p",[t._v("foo 함수 렉시컬 환경을 생성하고 foo 함수 실행 컨텍스트에 바인딩함"),a("br"),t._v("\n렉시컬 환경은 2개의 컴포넌트(환경 레코드 / 외부 렉시컬 환경에 대한 참조)로 구성되어 있음")]),t._v(" "),a("h4",{attrs:{id:"_2-1-함수-환경-레코드-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-함수-환경-레코드-생성"}},[t._v("#")]),t._v(" 2.1. 함수 환경 레코드 생성")]),t._v(" "),a("p",[t._v("함수 환경 레코드는 매개변수, arguments 객체, 함수 내부에서 선언한 지역 변수와 중첩 함수를 등록하고 관리함"),a("br"),t._v("\n(a, arguments, x, y, bar)")]),t._v(" "),a("h4",{attrs:{id:"_2-2-this-바인딩-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-this-바인딩-2"}},[t._v("#")]),t._v(" 2.2. this 바인딩")]),t._v(" "),a("p",[t._v("함수 호출방식에 따라 결정된 this가 함수 환경 레코드의 [[ThisValue]] 내부 슬롯에 바인딩 됨"),a("br"),t._v("\n함수 내부에서 this 호출 시 함수 환경 레코드의 [[ThisValue]] 내부 슬롯에 바인딩되어있는 객체가 반환됨")]),t._v(" "),a("p",[t._v("foo 함수는 일반 함수로 호출되었으므로 this는 전역 객체를 가리킴"),a("br"),t._v("\n따라 함수 환경 레코드의 [[ThisValue]] 내부 슬롯에는 전역 객체가 바인딩 됨")]),t._v(" "),a("h4",{attrs:{id:"_2-3-외부-렉시컬-환경에-대한-참조-결정-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-외부-렉시컬-환경에-대한-참조-결정-2"}},[t._v("#")]),t._v(" 2.3. 외부 렉시컬 환경에 대한 참조 결정")]),t._v(" "),a("p",[t._v("함수 정의가 평가된 시점에 실행 중인 실행 컨텍스트의 렉시컬 환경의 참조가 할당됨")]),t._v(" "),a("p",[t._v("foo 함수는 전역 코드에 정의된 전역 함수이므로 foo 함수 정의는 전역 코드 평가 시점에 평가됨"),a("br"),t._v("\n이 시점에 실행 중인 실행 컨텍스트는 전역 실행 컨텍스트이므로"),a("br"),t._v("\n외부 렉시컬 환경에 대한 참조에는 전역 렉시컬 환경의 참조가 할당됨")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("자바스크립트는 함수를 어디에 정의했는지에 따라 상위 스코프를 결정하므로"),a("br"),t._v("\n함수 객체는 자신이 정의된 스코프(=상위 스코프)를 기억함")]),t._v(" "),a("p",[t._v("자바스크립트 엔진은 함수 정의를 평가해 함수 객체를 생성할 때 현재 실행 중인 실행 컨텍스트의"),a("br"),t._v("\n렉시컬 환경(=함수의 상위 스코프)을 함수 객체의 내부 슬롯 [[Environment]]에 저장함")]),t._v(" "),a("p",[t._v("함수 렉시컬 환경의 '외부 렉시컬 환경에 대한 참조'에 할당되는 것은 바로"),a("br"),t._v("\n함수의 상위 스코프를 나타내는 함수 객체의 내부 슬롯 [[Environment]]에 저장된 렉시컬 환경의 참조."),a("br"),t._v("\n즉, 함수 객체의 내부 슬롯 [[Environment]]가 바로 렉시컬 스코프를 구현하는 매커니즘")]),t._v(" "),a("h3",{attrs:{id:"_6-5-foo-함수-코드-실행"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-foo-함수-코드-실행"}},[t._v("#")]),t._v(" 6-5. foo 함수 코드 실행")]),t._v(" "),a("p",[t._v("이제 런타임이 시작되어 foo 함수의 소스코드가 순차적으로 실행되기 시작함"),a("br"),t._v("\n매개변수에 인수가 할당되고, 변수 할당문이 실행되어 지역 변수 x,y 값에 할당되며 함수 bar가 호출됨")]),t._v(" "),a("p",[t._v("이때 식별자 결정을 위해 실행 중인 실행 컨텍스트의 렉시컬 환경에서 식별자를 검색"),a("br"),t._v("\n실행 중인 실행 컨텍스트의 렉시컬 환경에서 식별자 검색할 수 없는 경우"),a("br"),t._v("\n외부 렉시컬 환경에 대한 참조가 가리키는 렉시컬 환경으로 이동해 식별자를 검색함")]),t._v(" "),a("h3",{attrs:{id:"_6-6-bar-함수-코드-평가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-bar-함수-코드-평가"}},[t._v("#")]),t._v(" 6-6. bar 함수 코드 평가")]),t._v(" "),a("p",[t._v("bar 함수가 호출되면 bar 함수 내부로 코드의 제어권이 이동함"),a("br"),t._v("\n그리고 bar 함수 코드를 평가하기 시작함"),a("br"),t._v("\n실행 컨텍스트와 렉시컬 환경의 생성 과정은 foo 함수 코드 평가와 동일함")]),t._v(" "),a("h3",{attrs:{id:"_6-7-bar-함수-코드-실행"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-bar-함수-코드-실행"}},[t._v("#")]),t._v(" 6-7. bar 함수 코드 실행")]),t._v(" "),a("p",[t._v("런타임이 시작되어 bar 함수의 소스코드가 순차적으로 실행됨"),a("br"),t._v("\n매개변수에 인수가 할당되고, 변수 할당문이 실행되어 지역 변수 z에 값이 할당됨"),a("br"),t._v("\n그리고 console.log(a + b + x + y + z);가 아래 순서로 실행됨")]),t._v(" "),a("h4",{attrs:{id:"_1-console-식별자-검색"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-console-식별자-검색"}},[t._v("#")]),t._v(" 1. console 식별자 검색")]),t._v(" "),a("p",[t._v("console 식별자를 스코프 체인에서 검색함"),a("br"),t._v("\n(스코프 체인 : 현재 실행 중인 실행 컨텍스트의 렉시컬 환경에서 시작해"),a("br"),t._v("\n외부 렉시컬 환경에 대한 참조로 이어지는 렉시컬 환경의 연속)"),a("br"),t._v("\n식별자 검색 시에는 언제나 실행 중인 실행 컨텍스트의 렉시컬 환경에서 검색하기 시작함"),a("br"),t._v("\n(해당 렉시컬 환경에서 식별자를 검색할 수 없으면 스코프체인 상의 상위 스코프로 이동해 검색)")]),t._v(" "),a("p",[t._v("console 식별자는 bar 함수 렉시컬 환경에도, foo 함수 렉시컬 환경에도 없으므로"),a("br"),t._v("\n전역 렉시컬 환경으로 이동해 검색함"),a("br"),t._v("\n전역 렉시컬 환경은 객체 환경 레코드와 선언적 환경 레코드로 구성되어 있음"),a("br"),t._v("\nconsole 식별자는 객체 환경 레코드의 BindingObject를 통해 전역 객체에서 찾을 수 있음")]),t._v(" "),a("h4",{attrs:{id:"_2-log-메서드-검색"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-log-메서드-검색"}},[t._v("#")]),t._v(" 2. log 메서드 검색")]),t._v(" "),a("p",[t._v("console 객체에서 프로토타입 체인을 통해 log 메서드를 검색함"),a("br"),t._v("\n(log 메서드는 상속된 프로퍼티가 아니라 console 객체가 직접 소유하는 프로퍼티)")]),t._v(" "),a("h4",{attrs:{id:"_3-표현식-a-b-x-y-z의-평가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-표현식-a-b-x-y-z의-평가"}},[t._v("#")]),t._v(" 3. 표현식 a + b + x + y + z의 평가")]),t._v(" "),a("p",[t._v("console.log 메서드에 전달할 인수(표현식 a + b + x + y + z)를 평가하기 위해"),a("br"),t._v("\n스코프 체인에서 식별자를 검색함")]),t._v(" "),a("p",[t._v("a 식별자 - foo 함수 렉시컬 환경에서,"),a("br"),t._v("\nb 식별자 - bar 함수 렉시컬 환경에서,"),a("br"),t._v("\nx, y 식별자 - foo 함수 렉시컬 환경에서,"),a("br"),t._v("\nz 식별자 - bar 함수 렉시컬 환경에서 검색됨")]),t._v(" "),a("h4",{attrs:{id:"_4-console-log-메서드-호출"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-console-log-메서드-호출"}},[t._v("#")]),t._v(" 4. console.log 메서드 호출")]),t._v(" "),a("p",[t._v("표현식이 평가되어 생성한 값을 console.log 메서드에 전달해 호출함")]),t._v(" "),a("h3",{attrs:{id:"_6-8-bar-함수-코드-실행-종료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-bar-함수-코드-실행-종료"}},[t._v("#")]),t._v(" 6-8. bar 함수 코드 실행 종료")]),t._v(" "),a("p",[t._v("console.log 메서드가 호출되고 종료하면 더 실행할 코드가 없으므로 bar 함수 코드의 실행이 종료됨"),a("br"),t._v("\n실행 컨텍스트에서 bar 함수 실행 컨텍스트가 팝되어 제거되고"),a("br"),t._v("\nfoo 실행 컨텍스트가 실행 중인 실행 컨텍스트가 됨")]),t._v(" "),a("p",[t._v("실행 컨텍스트 스택에서 bar 함수 실행 컨텍스트가 제거되었다 해서"),a("br"),t._v("\nbar 함수 렉시컬 환경까지 즉시 소멸되는 것은 아님"),a("br"),t._v("\n렉시컬 환경은 실행 컨텍스트에 의해 참조되지만 독립적인 객체"),a("br"),t._v("\n객체를 포함한 모든 값은 누군가에 의해 참조되지 않을 때만 가비지 컬렉터에 의해 소멸함"),a("br"),t._v("\n때문에 함수 실행 컨텍스트가 소멸되었더라도 해당 함수 렉시컬 환경을"),a("br"),t._v("\n누구가 참조하고 있다면 해당 함수 렉시컬 환경은 소멸하지 않음")]),t._v(" "),a("h3",{attrs:{id:"_6-9-foo-함수-코드-실행-종료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-foo-함수-코드-실행-종료"}},[t._v("#")]),t._v(" 6-9. foo 함수 코드 실행 종료")]),t._v(" "),a("p",[t._v("bar 함수가 종료하면 더 이상 실행할 코드가 없으므로 foo 함수 코드도 실행이 종료됨"),a("br"),t._v("\n실행 컨텍스트 스택에서 foo 함수 실행 컨텍스트가 팝되어 제거되고"),a("br"),t._v("\n전역 실행 컨텍스트가 실행 중인 실행 컨텍스트가 됨")]),t._v(" "),a("h3",{attrs:{id:"_6-10-전역-코드-실행-종료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-전역-코드-실행-종료"}},[t._v("#")]),t._v(" 6-10. 전역 코드 실행 종료")]),t._v(" "),a("p",[t._v("foo 함수가 종료되면 더 실행할 전역 코드가 없으므로 전역 코드 실행이 종료되고"),a("br"),t._v("\n전역 실행 컨텍스트도 실행 컨텍스트에서 팝되어 실행 컨텍스트는 비게 됨")]),t._v(" "),a("h2",{attrs:{id:"_7-실행-컨텍스트와-블록-레벨-스코프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-실행-컨텍스트와-블록-레벨-스코프"}},[t._v("#")]),t._v(" 7. 실행 컨텍스트와 블록 레벨 스코프")]),t._v(" "),a("ul",[a("li",[t._v("var 변수 : 함수 코드 블록만 지역 스코프로 인정하는 함수 레벨 스코프를 따름")]),t._v(" "),a("li",[t._v("let/const 변수 : 모든 코드 블록을 지역 스코프로 인정하는 블록 레벨 스코프를 따름")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),a("p",[t._v("if문 코드 블록 내에서 let 키워드로 변수가 선언되었으므로"),a("br"),t._v("\nif 문 코드 블록 실행 시 코드 블록을 위한 블록 레벨 스코프를 생성해야 함"),a("br"),t._v("\n이를 위해 선언적 환경 레코드를 갖는 렉시컬 환경을 새롭게 생성해 기존의 전역 렉시컬 환경을 교체함")]),t._v(" "),a("p",[t._v("이때 새롭게 생성된 if 문의 코드 블록을 위한 렉시컬 환경의 외부 렉시컬 환경에 대한 참조는"),a("br"),t._v("\nif 문이 실행되기 이전의 전역 렉시컬 환경을 가리킴")]),t._v(" "),a("p",[t._v("if문 코드 블록의 실행이 종료되면 if 문 코드 블록이 실행되기 이전의 렉시컬 환경으로 되돌림"),a("br"),t._v("\n이는 if 문 뿐 아니라 블록 레벨 스코프를 생성하는 모든 블록문에 적용됨")])])}),[],!1,null,null,null);s.default=r.exports}}]);